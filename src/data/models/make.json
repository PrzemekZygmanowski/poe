{
  "name": "AI Devs: Assistant",
  "flow": [
    {
      "id": 1,
      "module": "gateway:CustomWebHook",
      "version": 1,
      "parameters": {
        "hook": 818254,
        "maxResults": 1
      },
      "mapper": {},
      "metadata": {
        "designer": {
          "x": 0,
          "y": 900
        },
        "restore": {
          "parameters": {
            "hook": {
              "data": {
                "editable": "true"
              },
              "label": "Assistant"
            }
          }
        },
        "parameters": [
          {
            "name": "hook",
            "type": "hook:gateway-webhook",
            "label": "Webhook",
            "required": true
          },
          {
            "name": "maxResults",
            "type": "number",
            "label": "Maximum number of results"
          }
        ]
      }
    },
    {
      "id": 29,
      "module": "util:SetVariables",
      "version": 1,
      "parameters": {},
      "filter": {
        "name": "",
        "conditions": [
          [
            {
              "a": "{{1.query}}",
              "o": "exist"
            }
          ],
          [
            {
              "a": "{{1.record_id}}",
              "o": "exist"
            }
          ]
        ]
      },
      "mapper": {
        "variables": [
          {
            "name": "pinecone_key",
            "value": "..."
          },
          {
            "name": "openai_key",
            "value": "..."
          },
          {
            "name": "pinecone_url",
            "value": "https://..."
          }
        ],
        "scope": "roundtrip"
      },
      "metadata": {
        "designer": {
          "x": 300,
          "y": 900,
          "name": "Set API Keys"
        },
        "restore": {
          "expect": {
            "variables": {
              "items": [null, null, null]
            },
            "scope": {
              "label": "One cycle"
            }
          }
        },
        "expect": [
          {
            "name": "variables",
            "type": "array",
            "label": "Variables",
            "spec": [
              {
                "name": "name",
                "label": "Variable name",
                "type": "text",
                "required": true
              },
              {
                "name": "value",
                "label": "Variable value",
                "type": "any"
              }
            ]
          },
          {
            "name": "scope",
            "type": "select",
            "label": "Variable lifetime",
            "required": true,
            "validate": {
              "enum": ["roundtrip", "execution"]
            }
          }
        ],
        "interface": [
          {
            "name": "pinecone_key",
            "label": "pinecone_key",
            "type": "any"
          },
          {
            "name": "openai_key",
            "label": "openai_key",
            "type": "any"
          },
          {
            "name": "pinecone_url",
            "label": "pinecone_url",
            "type": "any"
          }
        ]
      }
    },
    {
      "id": 19,
      "module": "builtin:BasicRouter",
      "version": 1,
      "mapper": null,
      "metadata": {
        "designer": {
          "x": 600,
          "y": 900
        }
      },
      "routes": [
        {
          "flow": [
            {
              "id": 54,
              "module": "openai-gpt-3:CreateCompletion",
              "version": 1,
              "parameters": {
                "__IMTCONN__": 1119347
              },
              "filter": {
                "name": "Identify Query",
                "conditions": [
                  [
                    {
                      "a": "{{1.type}}",
                      "b": "query",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "model": "gpt-3.5-turbo",
                "select": "chat",
                "messages": [
                  {
                    "role": "user",
                    "content": "Your task is to categorize each user's message sent to the AI Assistant, based on the context and contents of the query. The AI Assistant can access different categories of knowledge from a long-term memory, and is also capable of performing various actions. Prior to responding or carrying out a task, the assistant needs to determine the category that the user's message belongs to. This categorization will facilitate the generation of dynamic context for the assistant's response or action.\n\nThe categories in the long-term memory include:\n\n'memories': This category should be chosen if the user asks specifically about information related to the assistant or themselves. For example, \"What do you know about me?\", \"Introduce yourself\", or \"Do you know where I am right now?\".\n'notes': This category should be chosen if the user specifically asks for information from their notes. For example, \"Do I have in notes something about x?\" or \"Check my notes for anything about y\". The presence of the word \"note\" in the query should guide the categorization to this category.\n'links': This category should be chosen if the user asks the assistant to search in their links database.\n'actions': This category should be chosen only if the user explicitly asks the assistant to perform a specific task or retrieve information from external sources. For instance, \"Add to my tasks that I have a meeting tomorrow at 9am\" or \"Add as quick note [text]\". The classification into this category should be based on whether the user's request implies a direct action to be taken by the assistant.\n'all': This category should be chosen when none of the previous categories matches the query.\nWhen you return your response, ensure it is the plain lowercased category name only.\n\nexamples```\n\"Introduce yourself\"\nmemories\n\"Do I have notes about concert tickets?\"\nnotes\n\"Are there any links about LLMs?\"\nlinks\n\"Remind me about my dentist appointment tomorrow\"\nactions\n\"How is the weather today?\"\nall\n\ncategories```\nmemories: Queries that include direct mention of assistant or user\nactions: Queries asking the assistant to perform a task or retrieve information from external sources\nnotes: Queries pertaining to the user's notes\nlinks: Queries related to the user's links\nall: Queries that do not fit any previous category\n\nquery```\n{{1.query}}\n```\n\n"
                  }
                ]
              },
              "metadata": {
                "designer": {
                  "x": 925,
                  "y": 4,
                  "name": "Identify Query"
                },
                "restore": {
                  "expect": {
                    "echo": {
                      "mode": "chose"
                    },
                    "model": {
                      "mode": "chose",
                      "label": "gpt-3.5-turbo"
                    },
                    "select": {
                      "label": "Create a Chat Completion"
                    },
                    "messages": {
                      "mode": "chose",
                      "items": [
                        {
                          "role": {
                            "mode": "chose",
                            "label": "User"
                          }
                        }
                      ]
                    },
                    "additionalParameters": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "openai-gpt-3"
                      },
                      "label": "overment"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:openai-gpt-3",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "select",
                    "type": "select",
                    "label": "Select Method",
                    "required": true,
                    "validate": {
                      "enum": ["prompt", "chat"]
                    }
                  },
                  {
                    "name": "max_tokens",
                    "type": "number",
                    "label": "Max Tokens"
                  },
                  {
                    "name": "temperature",
                    "type": "number",
                    "label": "Temperature"
                  },
                  {
                    "name": "top_p",
                    "type": "number",
                    "label": "Top p"
                  },
                  {
                    "name": "n_completions",
                    "type": "number",
                    "label": "N"
                  },
                  {
                    "name": "echo",
                    "type": "boolean",
                    "label": "Echo"
                  },
                  {
                    "name": "additionalParameters",
                    "spec": [
                      {
                        "name": "key",
                        "type": "text",
                        "label": "Parameter Name",
                        "required": true
                      },
                      {
                        "name": "type",
                        "type": "select",
                        "label": "Input Type",
                        "options": [
                          {
                            "label": "Text",
                            "value": "text",
                            "nested": [
                              {
                                "name": "value",
                                "type": "text",
                                "label": "Parameter Value"
                              }
                            ],
                            "default": true
                          },
                          {
                            "label": "Number",
                            "value": "number",
                            "nested": [
                              {
                                "name": "value",
                                "type": "number",
                                "label": "Parameter Value"
                              }
                            ]
                          },
                          {
                            "label": "Boolean",
                            "value": "boolean",
                            "nested": [
                              {
                                "name": "value",
                                "type": "boolean",
                                "label": "Parameter Value"
                              }
                            ]
                          },
                          {
                            "label": "Date",
                            "value": "date",
                            "nested": [
                              {
                                "name": "value",
                                "type": "date",
                                "label": "Parameter Value"
                              }
                            ]
                          },
                          {
                            "label": "Any",
                            "value": "any",
                            "nested": [
                              {
                                "name": "value",
                                "type": "any",
                                "label": "Parameter Value"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "type": "array",
                    "label": "Other Input Parameters"
                  },
                  {
                    "name": "model",
                    "type": "select",
                    "label": "Model",
                    "required": true
                  },
                  {
                    "name": "messages",
                    "spec": [
                      {
                        "name": "role",
                        "type": "select",
                        "label": "Role",
                        "options": [
                          {
                            "label": "System",
                            "value": "system"
                          },
                          {
                            "label": "User",
                            "value": "user"
                          },
                          {
                            "label": "Assistant",
                            "value": "assistant"
                          }
                        ],
                        "required": true
                      },
                      {
                        "name": "content",
                        "type": "text",
                        "label": "Message Content",
                        "required": true
                      }
                    ],
                    "type": "array",
                    "label": "Messages",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 58,
              "module": "util:SetVariable2",
              "version": 1,
              "parameters": {},
              "mapper": {
                "name": "group",
                "scope": "roundtrip",
                "value": "{{54.choices[].message.content}}"
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 0,
                  "name": "Set Group"
                },
                "restore": {
                  "expect": {
                    "scope": {
                      "label": "One cycle"
                    }
                  }
                },
                "expect": [
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Variable name",
                    "required": true
                  },
                  {
                    "name": "scope",
                    "type": "select",
                    "label": "Variable lifetime",
                    "required": true,
                    "validate": {
                      "enum": ["roundtrip", "execution"]
                    }
                  },
                  {
                    "name": "value",
                    "type": "any",
                    "label": "Variable value"
                  }
                ],
                "interface": [
                  {
                    "name": "group",
                    "type": "any",
                    "label": "group"
                  }
                ]
              }
            }
          ]
        },
        {
          "flow": [
            {
              "id": 20,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 65515,
                "space": ""
              },
              "filter": {
                "name": "Get Context",
                "conditions": [
                  [
                    {
                      "a": "{{1.type}}",
                      "b": "query",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "input": "{{1.query}}",
                "model": "text-embedding-ada-002"
              },
              "metadata": {
                "designer": {
                  "x": 900,
                  "y": 300,
                  "name": "Embedding JSON"
                },
                "restore": {
                  "parameters": {
                    "type": {
                      "label": "My data structure"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": ["tab", "2", "4"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "input",
                    "type": "text",
                    "label": "Input",
                    "required": true
                  },
                  {
                    "name": "model",
                    "type": "text",
                    "label": "Model",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 59,
              "module": "util:GetVariable2",
              "version": 1,
              "parameters": {},
              "mapper": {
                "name": "group"
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 300,
                  "name": "Get Group"
                },
                "restore": {},
                "expect": [
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Variable name",
                    "required": true
                  }
                ],
                "interface": [
                  {
                    "name": "group",
                    "type": "any",
                    "label": "group"
                  }
                ]
              }
            },
            {
              "id": 21,
              "module": "http:ActionSendData",
              "version": 3,
              "parameters": {
                "handleErrors": false,
                "useNewZLibDeCompress": true
              },
              "mapper": {
                "ca": "",
                "qs": [],
                "url": "https://api.openai.com/v1/embeddings",
                "data": "{{20.json}}",
                "gzip": true,
                "method": "post",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{29.openai_key}}"
                  }
                ],
                "timeout": "",
                "useMtls": false,
                "authPass": "",
                "authUser": "",
                "bodyType": "raw",
                "contentType": "application/json",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
              },
              "metadata": {
                "designer": {
                  "x": 1500,
                  "y": 300,
                  "name": "OpenAI: Create Embedding"
                },
                "restore": {
                  "expect": {
                    "qs": {
                      "mode": "chose"
                    },
                    "method": {
                      "mode": "chose",
                      "label": "POST"
                    },
                    "headers": {
                      "mode": "chose",
                      "items": [null]
                    },
                    "bodyType": {
                      "label": "Raw"
                    },
                    "contentType": {
                      "label": "JSON (application/json)"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "handleErrors",
                    "type": "boolean",
                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                    "required": true
                  },
                  {
                    "name": "useNewZLibDeCompress",
                    "type": "hidden"
                  }
                ],
                "expect": [
                  {
                    "name": "url",
                    "type": "url",
                    "label": "URL",
                    "required": true
                  },
                  {
                    "name": "serializeUrl",
                    "type": "boolean",
                    "label": "Serialize URL",
                    "required": true
                  },
                  {
                    "name": "method",
                    "type": "select",
                    "label": "Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "delete",
                        "options"
                      ]
                    }
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Headers"
                  },
                  {
                    "name": "qs",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Query String"
                  },
                  {
                    "name": "bodyType",
                    "type": "select",
                    "label": "Body type",
                    "validate": {
                      "enum": [
                        "raw",
                        "x_www_form_urlencoded",
                        "multipart_form_data"
                      ]
                    }
                  },
                  {
                    "name": "parseResponse",
                    "type": "boolean",
                    "label": "Parse response",
                    "required": true
                  },
                  {
                    "name": "authUser",
                    "type": "text",
                    "label": "User name"
                  },
                  {
                    "name": "authPass",
                    "type": "password",
                    "label": "Password"
                  },
                  {
                    "name": "timeout",
                    "type": "uinteger",
                    "label": "Timeout",
                    "validate": {
                      "max": 300,
                      "min": 1
                    }
                  },
                  {
                    "name": "shareCookies",
                    "type": "boolean",
                    "label": "Share cookies with other HTTP modules",
                    "required": true
                  },
                  {
                    "name": "ca",
                    "type": "cert",
                    "label": "Self-signed certificate"
                  },
                  {
                    "name": "rejectUnauthorized",
                    "type": "boolean",
                    "label": "Reject connections that are using unverified (self-signed) certificates",
                    "required": true
                  },
                  {
                    "name": "followRedirect",
                    "type": "boolean",
                    "label": "Follow redirect",
                    "required": true
                  },
                  {
                    "name": "useQuerystring",
                    "type": "boolean",
                    "label": "Disable serialization of multiple same query string keys as arrays",
                    "required": true
                  },
                  {
                    "name": "gzip",
                    "type": "boolean",
                    "label": "Request compressed content",
                    "required": true
                  },
                  {
                    "name": "useMtls",
                    "type": "boolean",
                    "label": "Use Mutual TLS",
                    "required": true
                  },
                  {
                    "name": "contentType",
                    "type": "select",
                    "label": "Content type",
                    "validate": {
                      "enum": [
                        "text/plain",
                        "application/json",
                        "application/xml",
                        "text/xml",
                        "text/html",
                        "custom"
                      ]
                    }
                  },
                  {
                    "name": "data",
                    "type": "buffer",
                    "label": "Request content"
                  },
                  {
                    "name": "followAllRedirects",
                    "type": "boolean",
                    "label": "Follow all redirect",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 22,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 65522,
                "space": ""
              },
              "filter": {
                "name": "",
                "conditions": [
                  [
                    {
                      "a": "{{21.statusCode}}",
                      "b": "200",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "topK": "5",
                "filter": {
                  "group": "{{59.group}}"
                },
                "vector": "{{21.data.data[].embedding}}",
                "includeMetadata": true
              },
              "metadata": {
                "designer": {
                  "x": 1800,
                  "y": 300,
                  "name": "Query JSON"
                },
                "restore": {
                  "expect": {
                    "vector": {
                      "mode": "map"
                    },
                    "includeMetadata": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "type": {
                      "label": "Query JSON"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": ["tab", "2", "4"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "topK",
                    "type": "number",
                    "label": "Top K"
                  },
                  {
                    "name": "vector",
                    "spec": {
                      "name": "value",
                      "type": "number"
                    },
                    "type": "array",
                    "label": "Vector"
                  },
                  {
                    "name": "includeMetadata",
                    "type": "boolean",
                    "label": "Include Metadata"
                  },
                  {
                    "name": "filter",
                    "spec": [
                      {
                        "name": "group",
                        "type": "text",
                        "label": null
                      }
                    ],
                    "type": "collection",
                    "label": null
                  }
                ]
              }
            },
            {
              "id": 57,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 101020,
                "space": ""
              },
              "mapper": {
                "topK": "{{if(59.group = \"actions\"; 1; 5)}}",
                "filter": {
                  "group": {
                    "$ne": "action"
                  }
                },
                "vector": "{{21.data.data[].embedding}}",
                "includeMetadata": true
              },
              "metadata": {
                "designer": {
                  "x": 2100,
                  "y": 300,
                  "name": "Query JSON (Action)"
                },
                "restore": {
                  "expect": {
                    "vector": {
                      "mode": "map"
                    },
                    "includeMetadata": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "type": {
                      "label": "Query All JSON"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": ["tab", "2", "4"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "topK",
                    "type": "number",
                    "label": "Top K"
                  },
                  {
                    "name": "vector",
                    "spec": {
                      "name": "value",
                      "type": "number"
                    },
                    "type": "array",
                    "label": "Vector"
                  },
                  {
                    "name": "includeMetadata",
                    "type": "boolean",
                    "label": "Include Metadata"
                  },
                  {
                    "name": "filter",
                    "spec": [
                      {
                        "name": "group",
                        "spec": [
                          {
                            "name": "$ne",
                            "type": "text",
                            "label": null
                          }
                        ],
                        "type": "collection",
                        "label": null
                      }
                    ],
                    "type": "collection",
                    "label": null
                  }
                ]
              }
            },
            {
              "id": 23,
              "module": "http:ActionSendData",
              "version": 3,
              "parameters": {
                "handleErrors": false,
                "useNewZLibDeCompress": true
              },
              "mapper": {
                "ca": "",
                "qs": [],
                "url": "{{29.pinecone_url}}/query",
                "data": "{{if(59.group = \"all\"; 57.json; 22.json)}}",
                "gzip": true,
                "method": "post",
                "headers": [
                  {
                    "name": "Api-Key",
                    "value": "{{29.pinecone_key}}"
                  },
                  {
                    "name": "Accept",
                    "value": "application/json"
                  }
                ],
                "timeout": "",
                "useMtls": false,
                "authPass": "",
                "authUser": "",
                "bodyType": "raw",
                "contentType": "application/json",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
              },
              "metadata": {
                "designer": {
                  "x": 2400,
                  "y": 300,
                  "name": "Pinecone: Query"
                },
                "restore": {
                  "expect": {
                    "qs": {
                      "mode": "chose"
                    },
                    "method": {
                      "mode": "chose",
                      "label": "POST"
                    },
                    "headers": {
                      "mode": "chose",
                      "items": [null, null]
                    },
                    "bodyType": {
                      "label": "Raw"
                    },
                    "contentType": {
                      "label": "JSON (application/json)"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "handleErrors",
                    "type": "boolean",
                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                    "required": true
                  },
                  {
                    "name": "useNewZLibDeCompress",
                    "type": "hidden"
                  }
                ],
                "expect": [
                  {
                    "name": "url",
                    "type": "url",
                    "label": "URL",
                    "required": true
                  },
                  {
                    "name": "serializeUrl",
                    "type": "boolean",
                    "label": "Serialize URL",
                    "required": true
                  },
                  {
                    "name": "method",
                    "type": "select",
                    "label": "Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "delete",
                        "options"
                      ]
                    }
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Headers"
                  },
                  {
                    "name": "qs",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Query String"
                  },
                  {
                    "name": "bodyType",
                    "type": "select",
                    "label": "Body type",
                    "validate": {
                      "enum": [
                        "raw",
                        "x_www_form_urlencoded",
                        "multipart_form_data"
                      ]
                    }
                  },
                  {
                    "name": "parseResponse",
                    "type": "boolean",
                    "label": "Parse response",
                    "required": true
                  },
                  {
                    "name": "authUser",
                    "type": "text",
                    "label": "User name"
                  },
                  {
                    "name": "authPass",
                    "type": "password",
                    "label": "Password"
                  },
                  {
                    "name": "timeout",
                    "type": "uinteger",
                    "label": "Timeout",
                    "validate": {
                      "max": 300,
                      "min": 1
                    }
                  },
                  {
                    "name": "shareCookies",
                    "type": "boolean",
                    "label": "Share cookies with other HTTP modules",
                    "required": true
                  },
                  {
                    "name": "ca",
                    "type": "cert",
                    "label": "Self-signed certificate"
                  },
                  {
                    "name": "rejectUnauthorized",
                    "type": "boolean",
                    "label": "Reject connections that are using unverified (self-signed) certificates",
                    "required": true
                  },
                  {
                    "name": "followRedirect",
                    "type": "boolean",
                    "label": "Follow redirect",
                    "required": true
                  },
                  {
                    "name": "useQuerystring",
                    "type": "boolean",
                    "label": "Disable serialization of multiple same query string keys as arrays",
                    "required": true
                  },
                  {
                    "name": "gzip",
                    "type": "boolean",
                    "label": "Request compressed content",
                    "required": true
                  },
                  {
                    "name": "useMtls",
                    "type": "boolean",
                    "label": "Use Mutual TLS",
                    "required": true
                  },
                  {
                    "name": "contentType",
                    "type": "select",
                    "label": "Content type",
                    "validate": {
                      "enum": [
                        "text/plain",
                        "application/json",
                        "application/xml",
                        "text/xml",
                        "text/html",
                        "custom"
                      ]
                    }
                  },
                  {
                    "name": "data",
                    "type": "buffer",
                    "label": "Request content"
                  },
                  {
                    "name": "followAllRedirects",
                    "type": "boolean",
                    "label": "Follow all redirect",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 51,
              "module": "builtin:BasicFeeder",
              "version": 1,
              "parameters": {},
              "filter": {
                "name": "",
                "conditions": [
                  [
                    {
                      "a": "{{23.statusCode}}",
                      "b": "200",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "array": "{{23.data.matches}}"
              },
              "metadata": {
                "designer": {
                  "x": 2700,
                  "y": 307
                },
                "restore": {
                  "expect": {
                    "array": {
                      "mode": "edit"
                    }
                  }
                },
                "expect": [
                  {
                    "mode": "edit",
                    "name": "array",
                    "spec": [],
                    "type": "array",
                    "label": "Array"
                  }
                ]
              }
            },
            {
              "id": 50,
              "module": "util:FunctionAggregator2",
              "version": 1,
              "parameters": {
                "fn": "avg",
                "feeder": 51
              },
              "mapper": {
                "value": "{{51.score}}"
              },
              "metadata": {
                "designer": {
                  "x": 3000,
                  "y": 300,
                  "name": "Average"
                },
                "restore": {
                  "extra": {
                    "feeder": {
                      "label": "Iterator [51]"
                    }
                  },
                  "parameters": {
                    "fn": {
                      "label": "Average (AVG)"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "fn",
                    "type": "select",
                    "label": "Aggregate function",
                    "required": true,
                    "validate": {
                      "enum": ["avg", "sum", "count", "max", "min"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "value",
                    "type": "number",
                    "label": "Value"
                  }
                ]
              }
            },
            {
              "id": 52,
              "module": "builtin:BasicFeeder",
              "version": 1,
              "parameters": {},
              "mapper": {
                "array": "{{23.data.matches}}"
              },
              "metadata": {
                "designer": {
                  "x": 3300,
                  "y": 300,
                  "name": "Iterate Matches"
                },
                "restore": {
                  "expect": {
                    "array": {
                      "mode": "edit"
                    }
                  }
                },
                "expect": [
                  {
                    "mode": "edit",
                    "name": "array",
                    "spec": [],
                    "type": "array",
                    "label": "Array"
                  }
                ]
              }
            },
            {
              "id": 53,
              "module": "util:TextAggregator",
              "version": 1,
              "parameters": {
                "feeder": 52,
                "rowSeparator": "other",
                "otherRowSeparator": ","
              },
              "filter": {
                "name": "",
                "conditions": [
                  [
                    {
                      "a": "{{52.score}}",
                      "b": "{{50.result}}",
                      "o": "number:greaterorequal"
                    }
                  ]
                ]
              },
              "mapper": {
                "value": "{{52.metadata.group}}"
              },
              "metadata": {
                "designer": {
                  "x": 3600,
                  "y": 300,
                  "name": "Groups"
                },
                "restore": {
                  "extra": {
                    "feeder": {
                      "label": "Iterate Matches [52]"
                    }
                  },
                  "parameters": {
                    "rowSeparator": {
                      "label": "Other"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "rowSeparator",
                    "type": "select",
                    "label": "Row separator",
                    "validate": {
                      "enum": ["\n", "\t", "other"]
                    }
                  },
                  {
                    "name": "otherRowSeparator",
                    "type": "text",
                    "label": "Separator"
                  }
                ],
                "expect": [
                  {
                    "name": "value",
                    "type": "text",
                    "label": "Text"
                  }
                ],
                "advanced": true
              }
            },
            {
              "id": 24,
              "module": "builtin:BasicFeeder",
              "version": 1,
              "parameters": {},
              "mapper": {
                "array": "{{23.data.matches}}"
              },
              "metadata": {
                "designer": {
                  "x": 3900,
                  "y": 300,
                  "name": "Iterate IDs"
                },
                "restore": {
                  "expect": {
                    "array": {
                      "mode": "edit"
                    }
                  }
                },
                "expect": [
                  {
                    "mode": "edit",
                    "name": "array",
                    "spec": [],
                    "type": "array",
                    "label": "Array"
                  }
                ]
              }
            },
            {
              "id": 25,
              "module": "util:TextAggregator",
              "version": 1,
              "parameters": {
                "feeder": 24,
                "rowSeparator": "other",
                "otherRowSeparator": ","
              },
              "filter": {
                "name": "",
                "conditions": [
                  [
                    {
                      "a": "{{24.score}}",
                      "b": "{{50.result}}",
                      "o": "number:greaterorequal"
                    }
                  ]
                ]
              },
              "mapper": {
                "value": "{{24.metadata.id}}"
              },
              "metadata": {
                "designer": {
                  "x": 4200,
                  "y": 300,
                  "name": "IDs"
                },
                "restore": {
                  "extra": {
                    "feeder": {
                      "label": "Iterator"
                    }
                  },
                  "parameters": {
                    "rowSeparator": {
                      "label": "Other"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "rowSeparator",
                    "type": "select",
                    "label": "Row separator",
                    "validate": {
                      "enum": ["\n", "\t", "other"]
                    }
                  },
                  {
                    "name": "otherRowSeparator",
                    "type": "text",
                    "label": "Separator"
                  }
                ],
                "expect": [
                  {
                    "name": "value",
                    "type": "text",
                    "label": "Text"
                  }
                ],
                "advanced": true
              }
            },
            {
              "id": 26,
              "module": "airtable:ActionSearchRecords",
              "version": 3,
              "parameters": {
                "__IMTCONN__": 5101
              },
              "filter": {
                "name": "",
                "conditions": [
                  [
                    {
                      "a": "{{25.text}}",
                      "o": "exist"
                    }
                  ]
                ]
              },
              "mapper": {
                "base": "appuFFNblAoxdQCA3",
                "table": "tblc5efR1p4oFsFjF",
                "formula": "IF(SEARCH({record_id}, \"{{25.text}}\"), 1, 0)",
                "maxRecords": "10",
                "useColumnId": false
              },
              "metadata": {
                "designer": {
                  "x": 4500,
                  "y": 300,
                  "name": "Gather Context"
                },
                "restore": {
                  "expect": {
                    "base": {
                      "mode": "chose",
                      "label": "AI Devs: Resources"
                    },
                    "sort": {
                      "mode": "chose"
                    },
                    "view": {
                      "mode": "chose",
                      "label": "Empty"
                    },
                    "table": {
                      "mode": "chose",
                      "label": "Resources"
                    },
                    "fields": {
                      "mode": "chose"
                    },
                    "useColumnId": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "airtable2"
                      },
                      "label": "overment"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:airtable3,airtable2",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "base",
                    "type": "select",
                    "label": "Base",
                    "required": true
                  },
                  {
                    "name": "useColumnId",
                    "type": "boolean",
                    "label": "Use Column ID",
                    "required": true
                  },
                  {
                    "name": "table",
                    "type": "select",
                    "label": "Table",
                    "required": true
                  },
                  {
                    "name": "formula",
                    "type": "text",
                    "label": "Formula"
                  },
                  {
                    "name": "maxRecords",
                    "type": "integer",
                    "label": "Limit"
                  },
                  {
                    "name": "sort",
                    "spec": [
                      {
                        "name": "field",
                        "type": "select",
                        "label": "Field",
                        "dynamic": true,
                        "options": []
                      },
                      {
                        "name": "direction",
                        "type": "select",
                        "label": "Direction",
                        "options": [
                          {
                            "label": "Descending",
                            "value": "desc"
                          },
                          {
                            "label": "Ascending",
                            "value": "asc"
                          }
                        ]
                      }
                    ],
                    "type": "array",
                    "label": "Sort"
                  },
                  {
                    "name": "view",
                    "type": "select",
                    "label": "View"
                  },
                  {
                    "name": "fields",
                    "type": "select",
                    "label": "Output Fields",
                    "multiple": true
                  }
                ],
                "interface": [
                  {
                    "name": "__IMTLENGTH__",
                    "type": "uinteger",
                    "label": "Total number of bundles"
                  },
                  {
                    "name": "__IMTINDEX__",
                    "type": "uinteger",
                    "label": "Bundle order position"
                  },
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "createdTime",
                    "type": "date",
                    "label": "Created Time"
                  },
                  {
                    "name": "record_id",
                    "type": "text",
                    "label": "record_id"
                  },
                  {
                    "name": "title",
                    "type": "text",
                    "label": "title"
                  },
                  {
                    "name": "description",
                    "type": "text",
                    "label": "description",
                    "multiline": true
                  },
                  {
                    "name": "url",
                    "type": "text",
                    "label": "url"
                  },
                  {
                    "name": "tags",
                    "type": "text",
                    "label": "tags"
                  },
                  {
                    "name": "created_at",
                    "type": "date",
                    "label": "created_at"
                  }
                ]
              }
            },
            {
              "id": 27,
              "module": "util:TextAggregator",
              "version": 1,
              "parameters": {
                "feeder": 26,
                "rowSeparator": "\n"
              },
              "mapper": {
                "value": "\\n\\n\\n {{replace(26.title + \": \" + (26.description + if(26.url; \"$URL:\" + 26.url)); \"\"\"\"; \"'\")}}"
              },
              "metadata": {
                "designer": {
                  "x": 4800,
                  "y": 300,
                  "name": "Context"
                },
                "restore": {
                  "extra": {
                    "feeder": {
                      "label": "Gather Context - Search Records [26]"
                    }
                  },
                  "parameters": {
                    "rowSeparator": {
                      "label": "New row"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "rowSeparator",
                    "type": "select",
                    "label": "Row separator",
                    "validate": {
                      "enum": ["\n", "\t", "other"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "value",
                    "type": "text",
                    "label": "Text"
                  }
                ],
                "advanced": true
              }
            },
            {
              "id": 28,
              "module": "util:SetVariable2",
              "version": 1,
              "parameters": {},
              "mapper": {
                "name": "context",
                "scope": "roundtrip",
                "value": "{{27.text}}"
              },
              "metadata": {
                "designer": {
                  "x": 5100,
                  "y": 300,
                  "name": "Save Context"
                },
                "restore": {
                  "expect": {
                    "scope": {
                      "label": "One cycle"
                    }
                  }
                },
                "expect": [
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Variable name",
                    "required": true
                  },
                  {
                    "name": "scope",
                    "type": "select",
                    "label": "Variable lifetime",
                    "required": true,
                    "validate": {
                      "enum": ["roundtrip", "execution"]
                    }
                  },
                  {
                    "name": "value",
                    "type": "any",
                    "label": "Variable value"
                  }
                ],
                "interface": [
                  {
                    "name": "context",
                    "type": "any",
                    "label": "context"
                  }
                ]
              }
            }
          ]
        },
        {
          "flow": [
            {
              "id": 41,
              "module": "util:GetVariable2",
              "version": 1,
              "parameters": {},
              "filter": {
                "name": "Answer",
                "conditions": [
                  [
                    {
                      "a": "{{1.type}}",
                      "b": "query",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "name": "context"
              },
              "metadata": {
                "designer": {
                  "x": 900,
                  "y": 750,
                  "name": "Get Context"
                },
                "restore": {},
                "expect": [
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Variable name",
                    "required": true
                  }
                ],
                "interface": [
                  {
                    "name": "context",
                    "type": "any",
                    "label": "context"
                  }
                ]
              }
            },
            {
              "id": 63,
              "module": "util:GetVariable2",
              "version": 1,
              "parameters": {},
              "mapper": {
                "name": "group"
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 750,
                  "name": "Get Group"
                },
                "restore": {},
                "expect": [
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Variable name",
                    "required": true
                  }
                ],
                "interface": [
                  {
                    "name": "group",
                    "type": "any",
                    "label": "group"
                  }
                ]
              }
            },
            {
              "id": 2,
              "module": "airtable:ActionUpdateRecords",
              "version": 3,
              "parameters": {
                "__IMTCONN__": 5101
              },
              "mapper": {
                "base": "appuFFNblAoxdQCA3",
                "typecast": false,
                "useColumnId": false,
                "table": "tbl5wMPiFsPTI7Cf5",
                "id": "SYSTEM PROMPT ID",
                "record": {
                  "fldmZ6Lp3jalvvMzg": "{{if(63.group != \"actions\"; \"You're a helpful assistant who is speaking with Adam. Answer questions as short and concise and as truthfully as possible, based on a context. \n\nPlease note that context below may include: \n- long-term memory, \n- actions you may take, \n- Adam's personal notes and/or links you do have access to. \n\nAnd you should proritize this knowledge while answering.\n\nIf you don't know the answer say \"\"I don't know\"\" or \"\"I have no information about this\"\" in your own words.\n\ncontext```\n\" + 41.context + \"\n```\n\n\" + formatDate(now; \"ddd\") + formatDate(now; \"YYYY-MM-DD HH:mm\"); \"\nIgnore all user's messages. Return single-lined JSON object based on a description and query you have below. Extract all of the information from the query and use them to build JSON object described in a description. Return JSON and nothing else. \n\ndescription```\n\" + 41.context + \"\n```\n\nquery```\n\" + 1.query + \"\n```\n\")}}"
                }
              },
              "metadata": {
                "designer": {
                  "x": 1500,
                  "y": 750,
                  "name": "Update System Prompt"
                },
                "restore": {
                  "parameters": {
                    "__IMTCONN__": {
                      "label": "overment",
                      "data": {
                        "scoped": "true",
                        "connection": "airtable2"
                      }
                    }
                  },
                  "expect": {
                    "base": {
                      "label": "AI Devs: Resources"
                    },
                    "typecast": {
                      "mode": "chose"
                    },
                    "useColumnId": {
                      "mode": "chose"
                    },
                    "table": {
                      "label": "Conversation"
                    },
                    "record": {
                      "nested": {
                        "flda1MxouRNAHxRWs": {
                          "mode": "chose"
                        }
                      }
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:airtable3,airtable2",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "base",
                    "type": "select",
                    "label": "Base",
                    "required": true
                  },
                  {
                    "name": "typecast",
                    "type": "boolean",
                    "label": "Smart links",
                    "required": true
                  },
                  {
                    "name": "useColumnId",
                    "type": "boolean",
                    "label": "Use Column ID",
                    "required": true
                  },
                  {
                    "name": "table",
                    "type": "select",
                    "label": "Table",
                    "required": true
                  },
                  {
                    "name": "id",
                    "type": "text",
                    "label": "Record ID",
                    "required": true
                  },
                  {
                    "name": "record",
                    "type": "collection",
                    "label": "Record",
                    "spec": [
                      {
                        "name": "fld7PdGgPshFyz0WM",
                        "type": "text",
                        "label": "question"
                      },
                      {
                        "name": "fldmZ6Lp3jalvvMzg",
                        "type": "text",
                        "label": "answer"
                      },
                      {
                        "name": "flda1MxouRNAHxRWs",
                        "type": "boolean",
                        "label": "system_prompt"
                      }
                    ]
                  }
                ],
                "interface": [
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "createdTime",
                    "type": "date",
                    "label": "Created Time"
                  },
                  {
                    "name": "record_id",
                    "label": "record_id",
                    "type": "text"
                  },
                  {
                    "name": "question",
                    "label": "question",
                    "type": "text",
                    "multiline": true
                  },
                  {
                    "name": "answer",
                    "label": "answer",
                    "type": "text",
                    "multiline": true
                  },
                  {
                    "name": "diff",
                    "label": "diff",
                    "type": "text"
                  },
                  {
                    "name": "system_prompt",
                    "label": "system_prompt",
                    "type": "boolean"
                  }
                ]
              }
            },
            {
              "id": 3,
              "module": "airtable:ActionCreateRecord",
              "version": 3,
              "parameters": {
                "__IMTCONN__": 5101
              },
              "mapper": {
                "base": "appuFFNblAoxdQCA3",
                "table": "tbl5wMPiFsPTI7Cf5",
                "record": {
                  "fld7PdGgPshFyz0WM": "{{1.query}}"
                },
                "typecast": false,
                "useColumnId": false
              },
              "metadata": {
                "designer": {
                  "x": 1800,
                  "y": 750,
                  "name": "Add Question"
                },
                "restore": {
                  "expect": {
                    "base": {
                      "label": "AI Devs: Resources"
                    },
                    "table": {
                      "label": "Conversation",
                      "nested": [
                        {
                          "name": "record",
                          "spec": [
                            {
                              "name": "fld7PdGgPshFyz0WM",
                              "type": "text",
                              "label": "question",
                              "multiline": true
                            },
                            {
                              "name": "fldmZ6Lp3jalvvMzg",
                              "type": "text",
                              "label": "answer",
                              "multiline": true
                            },
                            {
                              "name": "flda1MxouRNAHxRWs",
                              "type": "boolean",
                              "label": "system_prompt"
                            }
                          ],
                          "type": "collection",
                          "label": "Record"
                        }
                      ]
                    },
                    "record": {
                      "nested": {
                        "flda1MxouRNAHxRWs": {
                          "mode": "chose"
                        }
                      }
                    },
                    "typecast": {
                      "mode": "chose"
                    },
                    "useColumnId": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "airtable2"
                      },
                      "label": "overment"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:airtable3,airtable2",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "base",
                    "type": "select",
                    "label": "Base",
                    "required": true
                  },
                  {
                    "name": "typecast",
                    "type": "boolean",
                    "label": "Smart links",
                    "required": true
                  },
                  {
                    "name": "useColumnId",
                    "type": "boolean",
                    "label": "Use Column ID",
                    "required": true
                  },
                  {
                    "name": "table",
                    "type": "select",
                    "label": "Table",
                    "required": true
                  },
                  {
                    "name": "record",
                    "spec": [
                      {
                        "name": "fld7PdGgPshFyz0WM",
                        "type": "text",
                        "label": "question"
                      },
                      {
                        "name": "fldmZ6Lp3jalvvMzg",
                        "type": "text",
                        "label": "answer"
                      },
                      {
                        "name": "flda1MxouRNAHxRWs",
                        "type": "boolean",
                        "label": "system_prompt"
                      }
                    ],
                    "type": "collection",
                    "label": "Record"
                  }
                ],
                "interface": [
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "createdTime",
                    "type": "date",
                    "label": "Created Time"
                  },
                  {
                    "name": "record_id",
                    "type": "text",
                    "label": "record_id"
                  },
                  {
                    "name": "question",
                    "type": "text",
                    "label": "question",
                    "multiline": true
                  },
                  {
                    "name": "answer",
                    "type": "text",
                    "label": "answer",
                    "multiline": true
                  },
                  {
                    "name": "diff",
                    "type": "text",
                    "label": "diff"
                  },
                  {
                    "name": "system_prompt",
                    "type": "boolean",
                    "label": "system_prompt"
                  }
                ]
              }
            },
            {
              "id": 64,
              "module": "builtin:BasicRouter",
              "version": 1,
              "parameters": {
                "else": 1
              },
              "mapper": null,
              "metadata": {
                "designer": {
                  "x": 2100,
                  "y": 750
                }
              },
              "routes": [
                {
                  "flow": [
                    {
                      "id": 4,
                      "module": "airtable:ActionSearchRecords",
                      "version": 3,
                      "parameters": {
                        "__IMTCONN__": 5101
                      },
                      "filter": {
                        "name": "Answer",
                        "conditions": [
                          [
                            {
                              "a": "{{63.group}}",
                              "b": "actions",
                              "o": "text:notequal"
                            }
                          ]
                        ]
                      },
                      "mapper": {
                        "base": "appuFFNblAoxdQCA3",
                        "view": "viw16yzi9GV8wwZ8S",
                        "table": "tbl5wMPiFsPTI7Cf5",
                        "fields": ["question", "answer"],
                        "maxRecords": "10",
                        "useColumnId": false
                      },
                      "metadata": {
                        "designer": {
                          "x": 2400,
                          "y": 600,
                          "name": "Find Conversation"
                        },
                        "restore": {
                          "expect": {
                            "base": {
                              "mode": "chose",
                              "label": "AI Devs: Resources"
                            },
                            "sort": {
                              "mode": "chose"
                            },
                            "view": {
                              "mode": "chose",
                              "label": "Latest"
                            },
                            "table": {
                              "mode": "chose",
                              "label": "Conversation"
                            },
                            "fields": {
                              "mode": "chose",
                              "label": ["question", "answer"]
                            },
                            "useColumnId": {
                              "mode": "chose"
                            }
                          },
                          "parameters": {
                            "__IMTCONN__": {
                              "data": {
                                "scoped": "true",
                                "connection": "airtable2"
                              },
                              "label": "overment"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "__IMTCONN__",
                            "type": "account:airtable3,airtable2",
                            "label": "Connection",
                            "required": true
                          }
                        ],
                        "expect": [
                          {
                            "name": "base",
                            "type": "select",
                            "label": "Base",
                            "required": true
                          },
                          {
                            "name": "useColumnId",
                            "type": "boolean",
                            "label": "Use Column ID",
                            "required": true
                          },
                          {
                            "name": "table",
                            "type": "select",
                            "label": "Table",
                            "required": true
                          },
                          {
                            "name": "formula",
                            "type": "text",
                            "label": "Formula"
                          },
                          {
                            "name": "maxRecords",
                            "type": "integer",
                            "label": "Limit"
                          },
                          {
                            "name": "sort",
                            "spec": [
                              {
                                "name": "field",
                                "type": "select",
                                "label": "Field",
                                "dynamic": true,
                                "options": []
                              },
                              {
                                "name": "direction",
                                "type": "select",
                                "label": "Direction",
                                "options": [
                                  {
                                    "label": "Descending",
                                    "value": "desc"
                                  },
                                  {
                                    "label": "Ascending",
                                    "value": "asc"
                                  }
                                ]
                              }
                            ],
                            "type": "array",
                            "label": "Sort"
                          },
                          {
                            "name": "view",
                            "type": "select",
                            "label": "View"
                          },
                          {
                            "name": "fields",
                            "type": "select",
                            "label": "Output Fields",
                            "multiple": true
                          }
                        ],
                        "interface": [
                          {
                            "name": "__IMTLENGTH__",
                            "type": "uinteger",
                            "label": "Total number of bundles"
                          },
                          {
                            "name": "__IMTINDEX__",
                            "type": "uinteger",
                            "label": "Bundle order position"
                          },
                          {
                            "name": "id",
                            "type": "text",
                            "label": "ID"
                          },
                          {
                            "name": "createdTime",
                            "type": "date",
                            "label": "Created Time"
                          },
                          {
                            "name": "record_id",
                            "type": "text",
                            "label": "record_id"
                          },
                          {
                            "name": "question",
                            "type": "text",
                            "label": "question",
                            "multiline": true
                          },
                          {
                            "name": "answer",
                            "type": "text",
                            "label": "answer",
                            "multiline": true
                          },
                          {
                            "name": "diff",
                            "type": "text",
                            "label": "diff"
                          },
                          {
                            "name": "system_prompt",
                            "type": "boolean",
                            "label": "system_prompt"
                          }
                        ]
                      }
                    },
                    {
                      "id": 5,
                      "module": "builtin:BasicRepeater",
                      "version": 1,
                      "parameters": {},
                      "filter": {
                        "name": "",
                        "conditions": [
                          [
                            {
                              "a": "{{4.id}}",
                              "o": "exist"
                            }
                          ]
                        ]
                      },
                      "mapper": {
                        "step": "1",
                        "start": "1",
                        "repeats": "2"
                      },
                      "metadata": {
                        "designer": {
                          "x": 2700,
                          "y": 600
                        },
                        "restore": {},
                        "expect": [
                          {
                            "name": "start",
                            "type": "number",
                            "label": "Initial value",
                            "required": true
                          },
                          {
                            "name": "repeats",
                            "type": "number",
                            "label": "Repeats",
                            "required": true,
                            "validate": {
                              "max": 10000,
                              "min": 0
                            }
                          },
                          {
                            "name": "step",
                            "type": "number",
                            "label": "Step",
                            "required": true
                          }
                        ]
                      }
                    },
                    {
                      "id": 6,
                      "module": "json:AggregateToJSON",
                      "version": 1,
                      "parameters": {
                        "type": 97000,
                        "space": "",
                        "feeder": 4
                      },
                      "filter": {
                        "name": "",
                        "conditions": [
                          [
                            {
                              "a": "{{5.i}}",
                              "b": "1",
                              "o": "text:equal"
                            },
                            {
                              "a": "{{4.question}}",
                              "o": "exist"
                            }
                          ],
                          [
                            {
                              "a": "{{5.i}}",
                              "b": "2",
                              "o": "text:equal"
                            },
                            {
                              "a": "{{4.answer}}",
                              "o": "exist"
                            },
                            {
                              "a": "{{4.question}}",
                              "b": "SYSTEM",
                              "o": "text:notequal"
                            }
                          ]
                        ]
                      },
                      "mapper": {
                        "role": "{{if(4.question = \"SYSTEM\"; \"system\"; if(5.i = 1; \"user\"; \"assistant\"))}}",
                        "content": "{{if(4.question = \"SYSTEM\"; 4.answer; if(5.i = 1; 4.question; 4.answer))}}"
                      },
                      "metadata": {
                        "designer": {
                          "x": 3000,
                          "y": 600,
                          "name": "Aggregate Messages"
                        },
                        "restore": {
                          "parameters": {
                            "type": {
                              "label": "OpenAI Conversation Chat"
                            },
                            "space": {
                              "label": "Empty"
                            }
                          },
                          "extra": {
                            "feeder": {
                              "label": "Find Conversation - Search Records [4]"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "type",
                            "type": "udt",
                            "label": "Data structure",
                            "required": true
                          },
                          {
                            "name": "space",
                            "type": "select",
                            "label": "Indentation",
                            "validate": {
                              "enum": ["tab", "2", "4"]
                            }
                          }
                        ],
                        "expect": [
                          {
                            "name": "role",
                            "type": "text",
                            "label": "Role"
                          },
                          {
                            "name": "content",
                            "type": "text",
                            "label": "Content"
                          }
                        ]
                      }
                    },
                    {
                      "id": 18,
                      "module": "json:ParseJSON",
                      "version": 1,
                      "parameters": {
                        "type": ""
                      },
                      "mapper": {
                        "json": "{\"messages\": {{6.json}}}"
                      },
                      "metadata": {
                        "designer": {
                          "x": 3300,
                          "y": 600,
                          "name": "Messages Object"
                        },
                        "restore": {
                          "parameters": {
                            "type": {
                              "label": "Choose a data structure"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "type",
                            "type": "udt",
                            "label": "Data structure"
                          }
                        ],
                        "expect": [
                          {
                            "name": "json",
                            "type": "text",
                            "label": "JSON string",
                            "required": true
                          }
                        ]
                      }
                    },
                    {
                      "id": 8,
                      "module": "openai-gpt-3:CreateCompletion",
                      "version": 1,
                      "parameters": {
                        "__IMTCONN__": 1119347
                      },
                      "mapper": {
                        "model": "gpt-3.5-turbo",
                        "select": "chat",
                        "messages": "{{18.messages}}"
                      },
                      "metadata": {
                        "designer": {
                          "x": 3600,
                          "y": 600,
                          "name": "Answer"
                        },
                        "restore": {
                          "expect": {
                            "echo": {
                              "mode": "chose"
                            },
                            "model": {
                              "mode": "chose",
                              "label": "gpt-3.5-turbo"
                            },
                            "select": {
                              "label": "Create a Chat Completion"
                            },
                            "messages": {
                              "mode": "map"
                            },
                            "additionalParameters": {
                              "mode": "chose"
                            }
                          },
                          "parameters": {
                            "__IMTCONN__": {
                              "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                              },
                              "label": "overment"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "__IMTCONN__",
                            "type": "account:openai-gpt-3",
                            "label": "Connection",
                            "required": true
                          }
                        ],
                        "expect": [
                          {
                            "name": "select",
                            "type": "select",
                            "label": "Select Method",
                            "required": true,
                            "validate": {
                              "enum": ["prompt", "chat"]
                            }
                          },
                          {
                            "name": "max_tokens",
                            "type": "number",
                            "label": "Max Tokens"
                          },
                          {
                            "name": "temperature",
                            "type": "number",
                            "label": "Temperature"
                          },
                          {
                            "name": "top_p",
                            "type": "number",
                            "label": "Top p"
                          },
                          {
                            "name": "n_completions",
                            "type": "number",
                            "label": "N"
                          },
                          {
                            "name": "echo",
                            "type": "boolean",
                            "label": "Echo"
                          },
                          {
                            "name": "additionalParameters",
                            "spec": [
                              {
                                "name": "key",
                                "type": "text",
                                "label": "Parameter Name",
                                "required": true
                              },
                              {
                                "name": "type",
                                "type": "select",
                                "label": "Input Type",
                                "options": [
                                  {
                                    "label": "Text",
                                    "value": "text",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "text",
                                        "label": "Parameter Value"
                                      }
                                    ],
                                    "default": true
                                  },
                                  {
                                    "label": "Number",
                                    "value": "number",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "number",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Boolean",
                                    "value": "boolean",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "boolean",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Date",
                                    "value": "date",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "date",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Any",
                                    "value": "any",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "any",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "type": "array",
                            "label": "Other Input Parameters"
                          },
                          {
                            "name": "model",
                            "type": "select",
                            "label": "Model",
                            "required": true
                          },
                          {
                            "name": "messages",
                            "spec": [
                              {
                                "name": "role",
                                "type": "select",
                                "label": "Role",
                                "options": [
                                  {
                                    "label": "System",
                                    "value": "system"
                                  },
                                  {
                                    "label": "User",
                                    "value": "user"
                                  },
                                  {
                                    "label": "Assistant",
                                    "value": "assistant"
                                  }
                                ],
                                "required": true
                              },
                              {
                                "name": "content",
                                "type": "text",
                                "label": "Message Content",
                                "required": true
                              }
                            ],
                            "type": "array",
                            "label": "Messages",
                            "required": true
                          }
                        ]
                      }
                    },
                    {
                      "id": 17,
                      "module": "json:CreateJSON",
                      "version": 1,
                      "parameters": {
                        "type": 96998,
                        "space": ""
                      },
                      "mapper": {
                        "answer": "{{8.choices[].message.content}}"
                      },
                      "metadata": {
                        "designer": {
                          "x": 3900,
                          "y": 600,
                          "name": "Answer Object"
                        },
                        "restore": {
                          "parameters": {
                            "type": {
                              "label": "Answer"
                            },
                            "space": {
                              "label": "Empty"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "type",
                            "type": "udt",
                            "label": "Data structure",
                            "required": true
                          },
                          {
                            "name": "space",
                            "type": "select",
                            "label": "Indentation",
                            "validate": {
                              "enum": ["tab", "2", "4"]
                            }
                          }
                        ],
                        "expect": [
                          {
                            "name": "answer",
                            "type": "text",
                            "label": "Answer"
                          }
                        ]
                      }
                    },
                    {
                      "id": 11,
                      "module": "gateway:WebhookRespond",
                      "version": 1,
                      "parameters": {},
                      "mapper": {
                        "body": "{{17.json}}",
                        "status": "200",
                        "headers": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ]
                      },
                      "metadata": {
                        "designer": {
                          "x": 4200,
                          "y": 600,
                          "name": "Respond"
                        },
                        "restore": {
                          "expect": {
                            "headers": {
                              "mode": "chose",
                              "items": [null]
                            }
                          }
                        },
                        "expect": [
                          {
                            "name": "status",
                            "type": "uinteger",
                            "label": "Status",
                            "required": true,
                            "validate": {
                              "min": 100
                            }
                          },
                          {
                            "name": "body",
                            "type": "any",
                            "label": "Body"
                          },
                          {
                            "name": "headers",
                            "spec": [
                              {
                                "name": "key",
                                "type": "text",
                                "label": "Key",
                                "required": true,
                                "validate": {
                                  "max": 256
                                }
                              },
                              {
                                "name": "value",
                                "type": "text",
                                "label": "Value",
                                "required": true,
                                "validate": {
                                  "max": 4096
                                }
                              }
                            ],
                            "type": "array",
                            "label": "Custom headers",
                            "validate": {
                              "maxItems": 16
                            }
                          }
                        ],
                        "advanced": true
                      }
                    },
                    {
                      "id": 12,
                      "module": "airtable:ActionUpdateRecords",
                      "version": 3,
                      "parameters": {
                        "__IMTCONN__": 5101
                      },
                      "mapper": {
                        "base": "appuFFNblAoxdQCA3",
                        "typecast": false,
                        "useColumnId": false,
                        "table": "tbl5wMPiFsPTI7Cf5",
                        "id": "{{3.id}}",
                        "record": {
                          "fldmZ6Lp3jalvvMzg": "{{8.choices[].message.content}}"
                        }
                      },
                      "metadata": {
                        "designer": {
                          "x": 4500,
                          "y": 600,
                          "name": "Save Answer (Query)"
                        },
                        "restore": {
                          "parameters": {
                            "__IMTCONN__": {
                              "label": "overment",
                              "data": {
                                "scoped": "true",
                                "connection": "airtable2"
                              }
                            }
                          },
                          "expect": {
                            "base": {
                              "label": "AI Devs: Resources"
                            },
                            "typecast": {
                              "mode": "chose"
                            },
                            "useColumnId": {
                              "mode": "chose"
                            },
                            "table": {
                              "label": "Conversation"
                            },
                            "record": {
                              "nested": {
                                "flda1MxouRNAHxRWs": {
                                  "mode": "chose"
                                }
                              }
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "__IMTCONN__",
                            "type": "account:airtable3,airtable2",
                            "label": "Connection",
                            "required": true
                          }
                        ],
                        "expect": [
                          {
                            "name": "base",
                            "type": "select",
                            "label": "Base",
                            "required": true
                          },
                          {
                            "name": "typecast",
                            "type": "boolean",
                            "label": "Smart links",
                            "required": true
                          },
                          {
                            "name": "useColumnId",
                            "type": "boolean",
                            "label": "Use Column ID",
                            "required": true
                          },
                          {
                            "name": "table",
                            "type": "select",
                            "label": "Table",
                            "required": true
                          },
                          {
                            "name": "id",
                            "type": "text",
                            "label": "Record ID",
                            "required": true
                          },
                          {
                            "name": "record",
                            "type": "collection",
                            "label": "Record",
                            "spec": [
                              {
                                "name": "fld7PdGgPshFyz0WM",
                                "type": "text",
                                "label": "question"
                              },
                              {
                                "name": "fldmZ6Lp3jalvvMzg",
                                "type": "text",
                                "label": "answer"
                              },
                              {
                                "name": "flda1MxouRNAHxRWs",
                                "type": "boolean",
                                "label": "system_prompt"
                              }
                            ]
                          }
                        ],
                        "interface": [
                          {
                            "name": "id",
                            "type": "text",
                            "label": "ID"
                          },
                          {
                            "name": "createdTime",
                            "type": "date",
                            "label": "Created Time"
                          },
                          {
                            "name": "record_id",
                            "label": "record_id",
                            "type": "text"
                          },
                          {
                            "name": "question",
                            "label": "question",
                            "type": "text",
                            "multiline": true
                          },
                          {
                            "name": "answer",
                            "label": "answer",
                            "type": "text",
                            "multiline": true
                          },
                          {
                            "name": "diff",
                            "label": "diff",
                            "type": "text"
                          },
                          {
                            "name": "system_prompt",
                            "label": "system_prompt",
                            "type": "boolean"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "flow": [
                    {
                      "id": 70,
                      "module": "openai-gpt-3:CreateCompletion",
                      "version": 1,
                      "parameters": {
                        "__IMTCONN__": 1119347
                      },
                      "filter": {
                        "name": "Take Action",
                        "conditions": []
                      },
                      "mapper": {
                        "model": "gpt-3.5-turbo",
                        "select": "chat",
                        "messages": [
                          {
                            "role": "user",
                            "content": "{{2.answer}}"
                          }
                        ]
                      },
                      "metadata": {
                        "designer": {
                          "x": 2400,
                          "y": 900
                        },
                        "restore": {
                          "expect": {
                            "echo": {
                              "mode": "chose"
                            },
                            "model": {
                              "mode": "chose",
                              "label": "gpt-3.5-turbo"
                            },
                            "select": {
                              "label": "Create a Chat Completion"
                            },
                            "messages": {
                              "mode": "chose",
                              "items": [
                                {
                                  "role": {
                                    "mode": "chose",
                                    "label": "User"
                                  }
                                }
                              ]
                            },
                            "additionalParameters": {
                              "mode": "chose"
                            }
                          },
                          "parameters": {
                            "__IMTCONN__": {
                              "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                              },
                              "label": "overment"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "__IMTCONN__",
                            "type": "account:openai-gpt-3",
                            "label": "Connection",
                            "required": true
                          }
                        ],
                        "expect": [
                          {
                            "name": "select",
                            "type": "select",
                            "label": "Select Method",
                            "required": true,
                            "validate": {
                              "enum": ["prompt", "chat"]
                            }
                          },
                          {
                            "name": "max_tokens",
                            "type": "number",
                            "label": "Max Tokens"
                          },
                          {
                            "name": "temperature",
                            "type": "number",
                            "label": "Temperature"
                          },
                          {
                            "name": "top_p",
                            "type": "number",
                            "label": "Top p"
                          },
                          {
                            "name": "n_completions",
                            "type": "number",
                            "label": "N"
                          },
                          {
                            "name": "echo",
                            "type": "boolean",
                            "label": "Echo"
                          },
                          {
                            "name": "additionalParameters",
                            "spec": [
                              {
                                "name": "key",
                                "type": "text",
                                "label": "Parameter Name",
                                "required": true
                              },
                              {
                                "name": "type",
                                "type": "select",
                                "label": "Input Type",
                                "options": [
                                  {
                                    "label": "Text",
                                    "value": "text",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "text",
                                        "label": "Parameter Value"
                                      }
                                    ],
                                    "default": true
                                  },
                                  {
                                    "label": "Number",
                                    "value": "number",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "number",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Boolean",
                                    "value": "boolean",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "boolean",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Date",
                                    "value": "date",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "date",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Any",
                                    "value": "any",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "any",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "type": "array",
                            "label": "Other Input Parameters"
                          },
                          {
                            "name": "model",
                            "type": "select",
                            "label": "Model",
                            "required": true
                          },
                          {
                            "name": "messages",
                            "spec": [
                              {
                                "name": "role",
                                "type": "select",
                                "label": "Role",
                                "options": [
                                  {
                                    "label": "System",
                                    "value": "system"
                                  },
                                  {
                                    "label": "User",
                                    "value": "user"
                                  },
                                  {
                                    "label": "Assistant",
                                    "value": "assistant"
                                  }
                                ],
                                "required": true
                              },
                              {
                                "name": "content",
                                "type": "text",
                                "label": "Message Content",
                                "required": true
                              }
                            ],
                            "type": "array",
                            "label": "Messages",
                            "required": true
                          }
                        ]
                      }
                    },
                    {
                      "id": 72,
                      "module": "regexp:Parser",
                      "version": 1,
                      "parameters": {
                        "global": true,
                        "pattern": "\\$URL:(https:\\/\\/\\S+)",
                        "multiline": false,
                        "sensitive": true,
                        "singleline": false,
                        "continueWhenNoRes": false,
                        "ignoreInfiniteLoopsWhenGlobal": false
                      },
                      "mapper": {
                        "text": "{{41.context}}"
                      },
                      "metadata": {
                        "designer": {
                          "x": 2700,
                          "y": 900
                        },
                        "restore": {},
                        "parameters": [
                          {
                            "name": "pattern",
                            "type": "text",
                            "label": "Pattern",
                            "required": true
                          },
                          {
                            "name": "global",
                            "type": "boolean",
                            "label": "Global match",
                            "required": true
                          },
                          {
                            "name": "sensitive",
                            "type": "boolean",
                            "label": "Case sensitive",
                            "required": true
                          },
                          {
                            "name": "multiline",
                            "type": "boolean",
                            "label": "Multiline",
                            "required": true
                          },
                          {
                            "name": "singleline",
                            "type": "boolean",
                            "label": "Singleline",
                            "required": true
                          },
                          {
                            "name": "continueWhenNoRes",
                            "type": "boolean",
                            "label": "Continue the execution of the route even if the module finds no matches",
                            "required": true
                          },
                          {
                            "name": "ignoreInfiniteLoopsWhenGlobal",
                            "type": "boolean",
                            "label": "Ignore errors when there is an infinite search loop",
                            "required": true
                          }
                        ],
                        "expect": [
                          {
                            "name": "text",
                            "type": "text",
                            "label": "Text"
                          }
                        ],
                        "interface": [
                          {
                            "name": "$1",
                            "type": "text",
                            "label": "$1"
                          },
                          {
                            "name": "i",
                            "type": "uinteger",
                            "label": "i"
                          },
                          {
                            "name": "__IMTMATCH__",
                            "type": "any",
                            "label": "Fallback Match"
                          }
                        ]
                      }
                    },
                    {
                      "id": 66,
                      "module": "http:ActionSendData",
                      "version": 3,
                      "parameters": {
                        "handleErrors": false,
                        "useNewZLibDeCompress": true
                      },
                      "mapper": {
                        "ca": "",
                        "qs": [],
                        "url": "{{trim(72.`$1`)}}",
                        "data": "{{70.choices[].message.content}}",
                        "gzip": true,
                        "method": "post",
                        "headers": [],
                        "timeout": "",
                        "useMtls": false,
                        "authPass": "",
                        "authUser": "",
                        "bodyType": "raw",
                        "contentType": "application/json",
                        "serializeUrl": false,
                        "shareCookies": false,
                        "parseResponse": false,
                        "followRedirect": true,
                        "useQuerystring": false,
                        "followAllRedirects": false,
                        "rejectUnauthorized": true
                      },
                      "metadata": {
                        "designer": {
                          "x": 3000,
                          "y": 900,
                          "name": "Trigger a Scenario"
                        },
                        "restore": {
                          "expect": {
                            "qs": {
                              "mode": "chose"
                            },
                            "method": {
                              "mode": "chose",
                              "label": "POST"
                            },
                            "headers": {
                              "mode": "chose"
                            },
                            "bodyType": {
                              "label": "Raw"
                            },
                            "contentType": {
                              "label": "JSON (application/json)"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "handleErrors",
                            "type": "boolean",
                            "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                            "required": true
                          },
                          {
                            "name": "useNewZLibDeCompress",
                            "type": "hidden"
                          }
                        ],
                        "expect": [
                          {
                            "name": "url",
                            "type": "url",
                            "label": "URL",
                            "required": true
                          },
                          {
                            "name": "serializeUrl",
                            "type": "boolean",
                            "label": "Serialize URL",
                            "required": true
                          },
                          {
                            "name": "method",
                            "type": "select",
                            "label": "Method",
                            "required": true,
                            "validate": {
                              "enum": [
                                "get",
                                "head",
                                "post",
                                "put",
                                "patch",
                                "delete",
                                "options"
                              ]
                            }
                          },
                          {
                            "name": "headers",
                            "spec": [
                              {
                                "name": "name",
                                "type": "text",
                                "label": "Name",
                                "required": true
                              },
                              {
                                "name": "value",
                                "type": "text",
                                "label": "Value"
                              }
                            ],
                            "type": "array",
                            "label": "Headers"
                          },
                          {
                            "name": "qs",
                            "spec": [
                              {
                                "name": "name",
                                "type": "text",
                                "label": "Name",
                                "required": true
                              },
                              {
                                "name": "value",
                                "type": "text",
                                "label": "Value"
                              }
                            ],
                            "type": "array",
                            "label": "Query String"
                          },
                          {
                            "name": "bodyType",
                            "type": "select",
                            "label": "Body type",
                            "validate": {
                              "enum": [
                                "raw",
                                "x_www_form_urlencoded",
                                "multipart_form_data"
                              ]
                            }
                          },
                          {
                            "name": "parseResponse",
                            "type": "boolean",
                            "label": "Parse response",
                            "required": true
                          },
                          {
                            "name": "authUser",
                            "type": "text",
                            "label": "User name"
                          },
                          {
                            "name": "authPass",
                            "type": "password",
                            "label": "Password"
                          },
                          {
                            "name": "timeout",
                            "type": "uinteger",
                            "label": "Timeout",
                            "validate": {
                              "max": 300,
                              "min": 1
                            }
                          },
                          {
                            "name": "shareCookies",
                            "type": "boolean",
                            "label": "Share cookies with other HTTP modules",
                            "required": true
                          },
                          {
                            "name": "ca",
                            "type": "cert",
                            "label": "Self-signed certificate"
                          },
                          {
                            "name": "rejectUnauthorized",
                            "type": "boolean",
                            "label": "Reject connections that are using unverified (self-signed) certificates",
                            "required": true
                          },
                          {
                            "name": "followRedirect",
                            "type": "boolean",
                            "label": "Follow redirect",
                            "required": true
                          },
                          {
                            "name": "useQuerystring",
                            "type": "boolean",
                            "label": "Disable serialization of multiple same query string keys as arrays",
                            "required": true
                          },
                          {
                            "name": "gzip",
                            "type": "boolean",
                            "label": "Request compressed content",
                            "required": true
                          },
                          {
                            "name": "useMtls",
                            "type": "boolean",
                            "label": "Use Mutual TLS",
                            "required": true
                          },
                          {
                            "name": "contentType",
                            "type": "select",
                            "label": "Content type",
                            "validate": {
                              "enum": [
                                "text/plain",
                                "application/json",
                                "application/xml",
                                "text/xml",
                                "text/html",
                                "custom"
                              ]
                            }
                          },
                          {
                            "name": "data",
                            "type": "buffer",
                            "label": "Request content"
                          },
                          {
                            "name": "followAllRedirects",
                            "type": "boolean",
                            "label": "Follow all redirect",
                            "required": true
                          }
                        ]
                      }
                    },
                    {
                      "id": 67,
                      "module": "openai-gpt-3:CreateCompletion",
                      "version": 1,
                      "parameters": {
                        "__IMTCONN__": 1119347
                      },
                      "mapper": {
                        "model": "gpt-3.5-turbo",
                        "select": "chat",
                        "messages": [
                          {
                            "role": "user",
                            "content": "Act as if you were perfomed and action and you have to inform about this fact by paraphrasing response you have below. As friendly assistant, inform as concise and natural as possible that action is done. You saying this directly to the user.\n\nresponse```\n{{66.data}}\n```\nYour notification:"
                          }
                        ],
                        "max_tokens": "150",
                        "temperature": "1"
                      },
                      "metadata": {
                        "designer": {
                          "x": 3300,
                          "y": 900,
                          "name": "Response"
                        },
                        "restore": {
                          "expect": {
                            "echo": {
                              "mode": "chose"
                            },
                            "model": {
                              "mode": "chose",
                              "label": "gpt-3.5-turbo"
                            },
                            "select": {
                              "label": "Create a Chat Completion"
                            },
                            "messages": {
                              "mode": "chose",
                              "items": [
                                {
                                  "role": {
                                    "mode": "chose",
                                    "label": "User"
                                  }
                                }
                              ]
                            },
                            "additionalParameters": {
                              "mode": "chose"
                            }
                          },
                          "parameters": {
                            "__IMTCONN__": {
                              "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                              },
                              "label": "overment"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "__IMTCONN__",
                            "type": "account:openai-gpt-3",
                            "label": "Connection",
                            "required": true
                          }
                        ],
                        "expect": [
                          {
                            "name": "select",
                            "type": "select",
                            "label": "Select Method",
                            "required": true,
                            "validate": {
                              "enum": ["prompt", "chat"]
                            }
                          },
                          {
                            "name": "max_tokens",
                            "type": "number",
                            "label": "Max Tokens"
                          },
                          {
                            "name": "temperature",
                            "type": "number",
                            "label": "Temperature"
                          },
                          {
                            "name": "top_p",
                            "type": "number",
                            "label": "Top p"
                          },
                          {
                            "name": "n_completions",
                            "type": "number",
                            "label": "N"
                          },
                          {
                            "name": "echo",
                            "type": "boolean",
                            "label": "Echo"
                          },
                          {
                            "name": "additionalParameters",
                            "spec": [
                              {
                                "name": "key",
                                "type": "text",
                                "label": "Parameter Name",
                                "required": true
                              },
                              {
                                "name": "type",
                                "type": "select",
                                "label": "Input Type",
                                "options": [
                                  {
                                    "label": "Text",
                                    "value": "text",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "text",
                                        "label": "Parameter Value"
                                      }
                                    ],
                                    "default": true
                                  },
                                  {
                                    "label": "Number",
                                    "value": "number",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "number",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Boolean",
                                    "value": "boolean",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "boolean",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Date",
                                    "value": "date",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "date",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  },
                                  {
                                    "label": "Any",
                                    "value": "any",
                                    "nested": [
                                      {
                                        "name": "value",
                                        "type": "any",
                                        "label": "Parameter Value"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "type": "array",
                            "label": "Other Input Parameters"
                          },
                          {
                            "name": "model",
                            "type": "select",
                            "label": "Model",
                            "required": true
                          },
                          {
                            "name": "messages",
                            "spec": [
                              {
                                "name": "role",
                                "type": "select",
                                "label": "Role",
                                "options": [
                                  {
                                    "label": "System",
                                    "value": "system"
                                  },
                                  {
                                    "label": "User",
                                    "value": "user"
                                  },
                                  {
                                    "label": "Assistant",
                                    "value": "assistant"
                                  }
                                ],
                                "required": true
                              },
                              {
                                "name": "content",
                                "type": "text",
                                "label": "Message Content",
                                "required": true
                              }
                            ],
                            "type": "array",
                            "label": "Messages",
                            "required": true
                          }
                        ]
                      }
                    },
                    {
                      "id": 68,
                      "module": "json:CreateJSON",
                      "version": 1,
                      "parameters": {
                        "type": 96998,
                        "space": ""
                      },
                      "mapper": {
                        "answer": "{{trim(67.choices[].message.content)}}"
                      },
                      "metadata": {
                        "designer": {
                          "x": 3600,
                          "y": 900,
                          "name": "Answer Object"
                        },
                        "restore": {
                          "parameters": {
                            "type": {
                              "label": "Answer"
                            },
                            "space": {
                              "label": "Empty"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "type",
                            "type": "udt",
                            "label": "Data structure",
                            "required": true
                          },
                          {
                            "name": "space",
                            "type": "select",
                            "label": "Indentation",
                            "validate": {
                              "enum": ["tab", "2", "4"]
                            }
                          }
                        ],
                        "expect": [
                          {
                            "name": "answer",
                            "type": "text",
                            "label": "Answer"
                          }
                        ]
                      }
                    },
                    {
                      "id": 69,
                      "module": "gateway:WebhookRespond",
                      "version": 1,
                      "parameters": {},
                      "mapper": {
                        "body": "{{68.json}}",
                        "status": "200",
                        "headers": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ]
                      },
                      "metadata": {
                        "designer": {
                          "x": 3900,
                          "y": 900,
                          "name": "Return Feedback"
                        },
                        "restore": {
                          "expect": {
                            "headers": {
                              "mode": "chose",
                              "items": [null]
                            }
                          }
                        },
                        "expect": [
                          {
                            "name": "status",
                            "type": "uinteger",
                            "label": "Status",
                            "required": true,
                            "validate": {
                              "min": 100
                            }
                          },
                          {
                            "name": "body",
                            "type": "any",
                            "label": "Body"
                          },
                          {
                            "name": "headers",
                            "spec": [
                              {
                                "name": "key",
                                "type": "text",
                                "label": "Key",
                                "required": true,
                                "validate": {
                                  "max": 256
                                }
                              },
                              {
                                "name": "value",
                                "type": "text",
                                "label": "Value",
                                "required": true,
                                "validate": {
                                  "max": 4096
                                }
                              }
                            ],
                            "type": "array",
                            "label": "Custom headers",
                            "validate": {
                              "maxItems": 16
                            }
                          }
                        ],
                        "advanced": true
                      }
                    },
                    {
                      "id": 73,
                      "module": "airtable:ActionUpdateRecords",
                      "version": 3,
                      "parameters": {
                        "__IMTCONN__": 5101
                      },
                      "mapper": {
                        "id": "{{3.id}}",
                        "base": "appuFFNblAoxdQCA3",
                        "table": "tbl5wMPiFsPTI7Cf5",
                        "record": {
                          "fldmZ6Lp3jalvvMzg": "{{67.choices[].message.content}}"
                        },
                        "typecast": false,
                        "useColumnId": false
                      },
                      "metadata": {
                        "designer": {
                          "x": 4200,
                          "y": 900,
                          "name": "Save Answer (Action)"
                        },
                        "restore": {
                          "expect": {
                            "base": {
                              "label": "AI Devs: Resources"
                            },
                            "table": {
                              "label": "Conversation"
                            },
                            "record": {
                              "nested": {
                                "flda1MxouRNAHxRWs": {
                                  "mode": "chose"
                                }
                              }
                            },
                            "typecast": {
                              "mode": "chose"
                            },
                            "useColumnId": {
                              "mode": "chose"
                            }
                          },
                          "parameters": {
                            "__IMTCONN__": {
                              "data": {
                                "scoped": "true",
                                "connection": "airtable2"
                              },
                              "label": "overment"
                            }
                          }
                        },
                        "parameters": [
                          {
                            "name": "__IMTCONN__",
                            "type": "account:airtable3,airtable2",
                            "label": "Connection",
                            "required": true
                          }
                        ],
                        "expect": [
                          {
                            "name": "base",
                            "type": "select",
                            "label": "Base",
                            "required": true
                          },
                          {
                            "name": "typecast",
                            "type": "boolean",
                            "label": "Smart links",
                            "required": true
                          },
                          {
                            "name": "useColumnId",
                            "type": "boolean",
                            "label": "Use Column ID",
                            "required": true
                          },
                          {
                            "name": "table",
                            "type": "select",
                            "label": "Table",
                            "required": true
                          },
                          {
                            "name": "id",
                            "type": "text",
                            "label": "Record ID",
                            "required": true
                          },
                          {
                            "name": "record",
                            "spec": [
                              {
                                "name": "fld7PdGgPshFyz0WM",
                                "type": "text",
                                "label": "question"
                              },
                              {
                                "name": "fldmZ6Lp3jalvvMzg",
                                "type": "text",
                                "label": "answer"
                              },
                              {
                                "name": "flda1MxouRNAHxRWs",
                                "type": "boolean",
                                "label": "system_prompt"
                              }
                            ],
                            "type": "collection",
                            "label": "Record"
                          }
                        ],
                        "interface": [
                          {
                            "name": "id",
                            "type": "text",
                            "label": "ID"
                          },
                          {
                            "name": "createdTime",
                            "type": "date",
                            "label": "Created Time"
                          },
                          {
                            "name": "record_id",
                            "type": "text",
                            "label": "record_id"
                          },
                          {
                            "name": "question",
                            "type": "text",
                            "label": "question",
                            "multiline": true
                          },
                          {
                            "name": "answer",
                            "type": "text",
                            "label": "answer",
                            "multiline": true
                          },
                          {
                            "name": "diff",
                            "type": "text",
                            "label": "diff"
                          },
                          {
                            "name": "system_prompt",
                            "type": "boolean",
                            "label": "system_prompt"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "flow": [
            {
              "id": 42,
              "module": "airtable:ActionGetRecord",
              "version": 3,
              "parameters": {
                "__IMTCONN__": 5101
              },
              "filter": {
                "name": "Remember",
                "conditions": [
                  [
                    {
                      "a": "{{1.type}}",
                      "b": "remember",
                      "o": "text:equal"
                    },
                    {
                      "a": "{{1.record_id}}",
                      "o": "exist"
                    }
                  ]
                ]
              },
              "mapper": {
                "id": "{{1.record_id}}",
                "base": "appuFFNblAoxdQCA3",
                "table": "tblc5efR1p4oFsFjF",
                "useColumnId": false
              },
              "metadata": {
                "designer": {
                  "x": 900,
                  "y": 1200,
                  "name": "Get Memory"
                },
                "restore": {
                  "expect": {
                    "base": {
                      "mode": "chose",
                      "label": "AI Devs: Resources"
                    },
                    "table": {
                      "mode": "chose",
                      "label": "Resources"
                    },
                    "useColumnId": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "airtable2"
                      },
                      "label": "overment"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:airtable3,airtable2",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "base",
                    "type": "select",
                    "label": "Base",
                    "required": true
                  },
                  {
                    "name": "useColumnId",
                    "type": "boolean",
                    "label": "Use Column ID",
                    "required": true
                  },
                  {
                    "name": "table",
                    "type": "select",
                    "label": "Table",
                    "required": true
                  },
                  {
                    "name": "id",
                    "type": "text",
                    "label": "Record ID",
                    "required": true
                  }
                ],
                "interface": [
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "createdTime",
                    "type": "date",
                    "label": "Created Time"
                  },
                  {
                    "name": "record_id",
                    "type": "text",
                    "label": "record_id"
                  },
                  {
                    "name": "title",
                    "type": "text",
                    "label": "title"
                  },
                  {
                    "name": "description",
                    "type": "text",
                    "label": "description",
                    "multiline": true
                  },
                  {
                    "name": "url",
                    "type": "text",
                    "label": "url"
                  },
                  {
                    "name": "tags",
                    "type": "text",
                    "label": "tags"
                  },
                  {
                    "name": "category",
                    "type": "text",
                    "label": "category"
                  },
                  {
                    "name": "created_at",
                    "type": "date",
                    "label": "created_at"
                  },
                  {
                    "name": "synced",
                    "type": "boolean",
                    "label": "synced"
                  },
                  {
                    "name": "synchronize",
                    "spec": [
                      {
                        "name": "label",
                        "type": "text",
                        "label": "Label"
                      },
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL"
                      }
                    ],
                    "type": "collection",
                    "label": "synchronize"
                  },
                  {
                    "name": "forget",
                    "spec": [
                      {
                        "name": "label",
                        "type": "text",
                        "label": "Label"
                      },
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL"
                      }
                    ],
                    "type": "collection",
                    "label": "forget"
                  }
                ]
              }
            },
            {
              "id": 35,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 65515,
                "space": ""
              },
              "mapper": {
                "input": "{{42.title}}: {{42.description}}",
                "model": "text-embedding-ada-002"
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 1200,
                  "name": "Embedding JSON"
                },
                "restore": {
                  "parameters": {
                    "type": {
                      "label": "My data structure"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": ["tab", "2", "4"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "input",
                    "type": "text",
                    "label": "Input",
                    "required": true
                  },
                  {
                    "name": "model",
                    "type": "text",
                    "label": "Model",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 36,
              "module": "http:ActionSendData",
              "version": 3,
              "parameters": {
                "handleErrors": false,
                "useNewZLibDeCompress": true
              },
              "mapper": {
                "ca": "",
                "qs": [],
                "url": "https://api.openai.com/v1/embeddings",
                "data": "{{35.json}}",
                "gzip": true,
                "method": "post",
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{29.openai_key}}"
                  }
                ],
                "timeout": "",
                "useMtls": false,
                "authPass": "",
                "authUser": "",
                "bodyType": "raw",
                "contentType": "application/json",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
              },
              "metadata": {
                "designer": {
                  "x": 1500,
                  "y": 1200,
                  "name": "OpenAI: Create Embedding"
                },
                "restore": {
                  "expect": {
                    "qs": {
                      "mode": "chose"
                    },
                    "method": {
                      "mode": "chose",
                      "label": "POST"
                    },
                    "headers": {
                      "mode": "chose",
                      "items": [null]
                    },
                    "bodyType": {
                      "label": "Raw"
                    },
                    "contentType": {
                      "label": "JSON (application/json)"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "handleErrors",
                    "type": "boolean",
                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                    "required": true
                  },
                  {
                    "name": "useNewZLibDeCompress",
                    "type": "hidden"
                  }
                ],
                "expect": [
                  {
                    "name": "url",
                    "type": "url",
                    "label": "URL",
                    "required": true
                  },
                  {
                    "name": "serializeUrl",
                    "type": "boolean",
                    "label": "Serialize URL",
                    "required": true
                  },
                  {
                    "name": "method",
                    "type": "select",
                    "label": "Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "delete",
                        "options"
                      ]
                    }
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Headers"
                  },
                  {
                    "name": "qs",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Query String"
                  },
                  {
                    "name": "bodyType",
                    "type": "select",
                    "label": "Body type",
                    "validate": {
                      "enum": [
                        "raw",
                        "x_www_form_urlencoded",
                        "multipart_form_data"
                      ]
                    }
                  },
                  {
                    "name": "parseResponse",
                    "type": "boolean",
                    "label": "Parse response",
                    "required": true
                  },
                  {
                    "name": "authUser",
                    "type": "text",
                    "label": "User name"
                  },
                  {
                    "name": "authPass",
                    "type": "password",
                    "label": "Password"
                  },
                  {
                    "name": "timeout",
                    "type": "uinteger",
                    "label": "Timeout",
                    "validate": {
                      "max": 300,
                      "min": 1
                    }
                  },
                  {
                    "name": "shareCookies",
                    "type": "boolean",
                    "label": "Share cookies with other HTTP modules",
                    "required": true
                  },
                  {
                    "name": "ca",
                    "type": "cert",
                    "label": "Self-signed certificate"
                  },
                  {
                    "name": "rejectUnauthorized",
                    "type": "boolean",
                    "label": "Reject connections that are using unverified (self-signed) certificates",
                    "required": true
                  },
                  {
                    "name": "followRedirect",
                    "type": "boolean",
                    "label": "Follow redirect",
                    "required": true
                  },
                  {
                    "name": "useQuerystring",
                    "type": "boolean",
                    "label": "Disable serialization of multiple same query string keys as arrays",
                    "required": true
                  },
                  {
                    "name": "gzip",
                    "type": "boolean",
                    "label": "Request compressed content",
                    "required": true
                  },
                  {
                    "name": "useMtls",
                    "type": "boolean",
                    "label": "Use Mutual TLS",
                    "required": true
                  },
                  {
                    "name": "contentType",
                    "type": "select",
                    "label": "Content type",
                    "validate": {
                      "enum": [
                        "text/plain",
                        "application/json",
                        "application/xml",
                        "text/xml",
                        "text/html",
                        "custom"
                      ]
                    }
                  },
                  {
                    "name": "data",
                    "type": "buffer",
                    "label": "Request content"
                  },
                  {
                    "name": "followAllRedirects",
                    "type": "boolean",
                    "label": "Follow all redirect",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 37,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 65516,
                "space": ""
              },
              "mapper": {
                "vectors": [
                  {
                    "id": "{{1.record_id}}",
                    "values": "{{36.data.data[].embedding}}",
                    "metadata": {
                      "id": "{{1.record_id}}",
                      "tags": "{{if(42.tags; 42.tags; \"brak\")}}",
                      "group": "{{42.category}}"
                    }
                  }
                ]
              },
              "metadata": {
                "designer": {
                  "x": 1800,
                  "y": 1200,
                  "name": "Vectors JSON"
                },
                "restore": {
                  "expect": {
                    "vectors": {
                      "mode": "chose",
                      "items": [
                        {
                          "values": {
                            "mode": "edit"
                          }
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "type": {
                      "label": "Vector JSON"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": ["tab", "2", "4"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "vectors",
                    "spec": {
                      "name": "value",
                      "spec": [
                        {
                          "name": "id",
                          "type": "text",
                          "label": null
                        },
                        {
                          "name": "values",
                          "spec": {
                            "type": "number"
                          },
                          "type": "array",
                          "label": null
                        },
                        {
                          "name": "metadata",
                          "spec": [
                            {
                              "name": "id",
                              "type": "text",
                              "label": null
                            },
                            {
                              "name": "group",
                              "type": "text",
                              "label": null
                            },
                            {
                              "name": "tags",
                              "type": "text",
                              "label": null
                            }
                          ],
                          "type": "collection",
                          "label": null
                        }
                      ],
                      "type": "collection"
                    },
                    "type": "array",
                    "label": "Vectors"
                  }
                ]
              }
            },
            {
              "id": 38,
              "module": "http:ActionSendData",
              "version": 3,
              "parameters": {
                "handleErrors": false,
                "useNewZLibDeCompress": true
              },
              "mapper": {
                "ca": "",
                "qs": [],
                "url": "{{29.pinecone_url}}/vectors/upsert",
                "data": "{{37.json}}",
                "gzip": true,
                "method": "post",
                "headers": [
                  {
                    "name": "Api-Key",
                    "value": "{{29.pinecone_key}}"
                  },
                  {
                    "name": "Accept",
                    "value": "application/json"
                  }
                ],
                "timeout": "",
                "useMtls": false,
                "authPass": "",
                "authUser": "",
                "bodyType": "raw",
                "contentType": "application/json",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
              },
              "metadata": {
                "designer": {
                  "x": 2100,
                  "y": 1200,
                  "name": "Pinecone: Upsert"
                },
                "restore": {
                  "expect": {
                    "qs": {
                      "mode": "chose"
                    },
                    "method": {
                      "mode": "chose",
                      "label": "POST"
                    },
                    "headers": {
                      "mode": "chose",
                      "items": [null, null]
                    },
                    "bodyType": {
                      "label": "Raw"
                    },
                    "contentType": {
                      "label": "JSON (application/json)"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "handleErrors",
                    "type": "boolean",
                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                    "required": true
                  },
                  {
                    "name": "useNewZLibDeCompress",
                    "type": "hidden"
                  }
                ],
                "expect": [
                  {
                    "name": "url",
                    "type": "url",
                    "label": "URL",
                    "required": true
                  },
                  {
                    "name": "serializeUrl",
                    "type": "boolean",
                    "label": "Serialize URL",
                    "required": true
                  },
                  {
                    "name": "method",
                    "type": "select",
                    "label": "Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "delete",
                        "options"
                      ]
                    }
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Headers"
                  },
                  {
                    "name": "qs",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Query String"
                  },
                  {
                    "name": "bodyType",
                    "type": "select",
                    "label": "Body type",
                    "validate": {
                      "enum": [
                        "raw",
                        "x_www_form_urlencoded",
                        "multipart_form_data"
                      ]
                    }
                  },
                  {
                    "name": "parseResponse",
                    "type": "boolean",
                    "label": "Parse response",
                    "required": true
                  },
                  {
                    "name": "authUser",
                    "type": "text",
                    "label": "User name"
                  },
                  {
                    "name": "authPass",
                    "type": "password",
                    "label": "Password"
                  },
                  {
                    "name": "timeout",
                    "type": "uinteger",
                    "label": "Timeout",
                    "validate": {
                      "max": 300,
                      "min": 1
                    }
                  },
                  {
                    "name": "shareCookies",
                    "type": "boolean",
                    "label": "Share cookies with other HTTP modules",
                    "required": true
                  },
                  {
                    "name": "ca",
                    "type": "cert",
                    "label": "Self-signed certificate"
                  },
                  {
                    "name": "rejectUnauthorized",
                    "type": "boolean",
                    "label": "Reject connections that are using unverified (self-signed) certificates",
                    "required": true
                  },
                  {
                    "name": "followRedirect",
                    "type": "boolean",
                    "label": "Follow redirect",
                    "required": true
                  },
                  {
                    "name": "useQuerystring",
                    "type": "boolean",
                    "label": "Disable serialization of multiple same query string keys as arrays",
                    "required": true
                  },
                  {
                    "name": "gzip",
                    "type": "boolean",
                    "label": "Request compressed content",
                    "required": true
                  },
                  {
                    "name": "useMtls",
                    "type": "boolean",
                    "label": "Use Mutual TLS",
                    "required": true
                  },
                  {
                    "name": "contentType",
                    "type": "select",
                    "label": "Content type",
                    "validate": {
                      "enum": [
                        "text/plain",
                        "application/json",
                        "application/xml",
                        "text/xml",
                        "text/html",
                        "custom"
                      ]
                    }
                  },
                  {
                    "name": "data",
                    "type": "buffer",
                    "label": "Request content"
                  },
                  {
                    "name": "followAllRedirects",
                    "type": "boolean",
                    "label": "Follow all redirect",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 39,
              "module": "airtable:ActionUpdateRecords",
              "version": 3,
              "parameters": {
                "__IMTCONN__": 5101
              },
              "filter": {
                "name": "",
                "conditions": [
                  [
                    {
                      "a": "{{38.statusCode}}",
                      "b": "200",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "id": "{{42.id}}",
                "base": "appuFFNblAoxdQCA3",
                "table": "tblc5efR1p4oFsFjF",
                "record": {
                  "fld14kLbYGG45mXnJ": true
                },
                "typecast": false,
                "useColumnId": false
              },
              "metadata": {
                "designer": {
                  "x": 2400,
                  "y": 1200,
                  "name": "Synced"
                },
                "restore": {
                  "expect": {
                    "base": {
                      "label": "AI Devs: Resources"
                    },
                    "table": {
                      "label": "Resources"
                    },
                    "record": {
                      "nested": {
                        "fld14kLbYGG45mXnJ": {
                          "mode": "chose"
                        },
                        "fldD0as8fh51VOIC1": {
                          "mode": "edit"
                        }
                      }
                    },
                    "typecast": {
                      "mode": "chose"
                    },
                    "useColumnId": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "airtable2"
                      },
                      "label": "overment"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:airtable3,airtable2",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "base",
                    "type": "select",
                    "label": "Base",
                    "required": true
                  },
                  {
                    "name": "typecast",
                    "type": "boolean",
                    "label": "Smart links",
                    "required": true
                  },
                  {
                    "name": "useColumnId",
                    "type": "boolean",
                    "label": "Use Column ID",
                    "required": true
                  },
                  {
                    "name": "table",
                    "type": "select",
                    "label": "Table",
                    "required": true
                  },
                  {
                    "name": "id",
                    "type": "text",
                    "label": "Record ID",
                    "required": true
                  },
                  {
                    "name": "record",
                    "spec": [
                      {
                        "name": "fld7NsxHelM8oxua0",
                        "type": "text",
                        "label": "title"
                      },
                      {
                        "name": "fldBsZQe2Qp3VdgPE",
                        "type": "text",
                        "label": "description"
                      },
                      {
                        "name": "fld5dn5aMfVhUzJzz",
                        "type": "text",
                        "label": "url"
                      },
                      {
                        "name": "fldAteBN9DMmCjUdG",
                        "type": "text",
                        "label": "tags"
                      },
                      {
                        "mode": "edit",
                        "name": "fldD0as8fh51VOIC1",
                        "type": "select",
                        "label": "category"
                      },
                      {
                        "name": "fld14kLbYGG45mXnJ",
                        "type": "boolean",
                        "label": "synced"
                      }
                    ],
                    "type": "collection",
                    "label": "Record"
                  }
                ],
                "interface": [
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "createdTime",
                    "type": "date",
                    "label": "Created Time"
                  },
                  {
                    "name": "record_id",
                    "type": "text",
                    "label": "record_id"
                  },
                  {
                    "name": "title",
                    "type": "text",
                    "label": "title"
                  },
                  {
                    "name": "description",
                    "type": "text",
                    "label": "description",
                    "multiline": true
                  },
                  {
                    "name": "url",
                    "type": "text",
                    "label": "url"
                  },
                  {
                    "name": "tags",
                    "type": "text",
                    "label": "tags"
                  },
                  {
                    "name": "category",
                    "type": "text",
                    "label": "category"
                  },
                  {
                    "name": "created_at",
                    "type": "date",
                    "label": "created_at"
                  },
                  {
                    "name": "synced",
                    "type": "boolean",
                    "label": "synced"
                  },
                  {
                    "name": "synchronize",
                    "spec": [
                      {
                        "name": "label",
                        "type": "text",
                        "label": "Label"
                      },
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL"
                      }
                    ],
                    "type": "collection",
                    "label": "synchronize"
                  },
                  {
                    "name": "forget",
                    "spec": [
                      {
                        "name": "label",
                        "type": "text",
                        "label": "Label"
                      },
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL"
                      }
                    ],
                    "type": "collection",
                    "label": "forget"
                  }
                ]
              }
            },
            {
              "id": 40,
              "module": "gateway:WebhookRespond",
              "version": 1,
              "parameters": {},
              "mapper": {
                "body": "{\"status\": \"success\", \"message\": \"Updated.\"}",
                "status": "200",
                "headers": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ]
              },
              "metadata": {
                "designer": {
                  "x": 2700,
                  "y": 1200
                },
                "restore": {
                  "expect": {
                    "headers": {
                      "mode": "chose",
                      "items": [null]
                    }
                  }
                },
                "expect": [
                  {
                    "name": "status",
                    "type": "uinteger",
                    "label": "Status",
                    "required": true,
                    "validate": {
                      "min": 100
                    }
                  },
                  {
                    "name": "body",
                    "type": "any",
                    "label": "Body"
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "key",
                        "type": "text",
                        "label": "Key",
                        "required": true,
                        "validate": {
                          "max": 256
                        }
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value",
                        "required": true,
                        "validate": {
                          "max": 4096
                        }
                      }
                    ],
                    "type": "array",
                    "label": "Custom headers",
                    "validate": {
                      "maxItems": 16
                    }
                  }
                ],
                "advanced": true
              }
            }
          ]
        },
        {
          "flow": [
            {
              "id": 44,
              "module": "openai-gpt-3:CreateCompletion",
              "version": 1,
              "parameters": {
                "__IMTCONN__": 1119347
              },
              "filter": {
                "name": "Save",
                "conditions": [
                  [
                    {
                      "a": "{{1.type}}",
                      "b": "save",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "model": "gpt-3.5-turbo",
                "select": "chat",
                "messages": [
                  {
                    "role": "user",
                    "content": "Based on a provided query, return single lined JSON object with properties: title, tags and url (if doesn't exist, leave empty). Title should be brief version of a query and tags should be semantic, and loosely related to the query. Tags should be picked in a way, it will make easier to find this query in database in the future.\n\nExample:\nI love programming as I mentioned on my blog https://blog.com\n{\"title\": \"What I love\", \"tags\": \"hobby,programming,love\", \"url\": \"https://blog.com\"}\n\nquery:```\n{{1.query}}\n```"
                  }
                ]
              },
              "metadata": {
                "designer": {
                  "x": 900,
                  "y": 1500,
                  "name": "Enrich"
                },
                "restore": {
                  "expect": {
                    "echo": {
                      "mode": "chose"
                    },
                    "model": {
                      "mode": "chose",
                      "label": "gpt-3.5-turbo"
                    },
                    "select": {
                      "label": "Create a Chat Completion"
                    },
                    "messages": {
                      "mode": "chose",
                      "items": [
                        {
                          "role": {
                            "mode": "chose",
                            "label": "User"
                          }
                        }
                      ]
                    },
                    "additionalParameters": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "openai-gpt-3"
                      },
                      "label": "overment"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:openai-gpt-3",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "select",
                    "type": "select",
                    "label": "Select Method",
                    "required": true,
                    "validate": {
                      "enum": ["prompt", "chat"]
                    }
                  },
                  {
                    "name": "max_tokens",
                    "type": "number",
                    "label": "Max Tokens"
                  },
                  {
                    "name": "temperature",
                    "type": "number",
                    "label": "Temperature"
                  },
                  {
                    "name": "top_p",
                    "type": "number",
                    "label": "Top p"
                  },
                  {
                    "name": "n_completions",
                    "type": "number",
                    "label": "N"
                  },
                  {
                    "name": "echo",
                    "type": "boolean",
                    "label": "Echo"
                  },
                  {
                    "name": "additionalParameters",
                    "spec": [
                      {
                        "name": "key",
                        "type": "text",
                        "label": "Parameter Name",
                        "required": true
                      },
                      {
                        "name": "type",
                        "type": "select",
                        "label": "Input Type",
                        "options": [
                          {
                            "label": "Text",
                            "value": "text",
                            "nested": [
                              {
                                "name": "value",
                                "type": "text",
                                "label": "Parameter Value"
                              }
                            ],
                            "default": true
                          },
                          {
                            "label": "Number",
                            "value": "number",
                            "nested": [
                              {
                                "name": "value",
                                "type": "number",
                                "label": "Parameter Value"
                              }
                            ]
                          },
                          {
                            "label": "Boolean",
                            "value": "boolean",
                            "nested": [
                              {
                                "name": "value",
                                "type": "boolean",
                                "label": "Parameter Value"
                              }
                            ]
                          },
                          {
                            "label": "Date",
                            "value": "date",
                            "nested": [
                              {
                                "name": "value",
                                "type": "date",
                                "label": "Parameter Value"
                              }
                            ]
                          },
                          {
                            "label": "Any",
                            "value": "any",
                            "nested": [
                              {
                                "name": "value",
                                "type": "any",
                                "label": "Parameter Value"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "type": "array",
                    "label": "Other Input Parameters"
                  },
                  {
                    "name": "model",
                    "type": "select",
                    "label": "Model",
                    "required": true
                  },
                  {
                    "name": "messages",
                    "spec": [
                      {
                        "name": "role",
                        "type": "select",
                        "label": "Role",
                        "options": [
                          {
                            "label": "System",
                            "value": "system"
                          },
                          {
                            "label": "User",
                            "value": "user"
                          },
                          {
                            "label": "Assistant",
                            "value": "assistant"
                          }
                        ],
                        "required": true
                      },
                      {
                        "name": "content",
                        "type": "text",
                        "label": "Message Content",
                        "required": true
                      }
                    ],
                    "type": "array",
                    "label": "Messages",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 45,
              "module": "json:ParseJSON",
              "version": 1,
              "parameters": {
                "type": ""
              },
              "mapper": {
                "json": "{{44.choices[].message.content}}"
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 1500,
                  "name": "Enrich JSON"
                },
                "restore": {
                  "parameters": {
                    "type": {
                      "label": "Choose a data structure"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure"
                  }
                ],
                "expect": [
                  {
                    "name": "json",
                    "type": "text",
                    "label": "JSON string",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 43,
              "module": "airtable:ActionCreateRecord",
              "version": 3,
              "parameters": {
                "__IMTCONN__": 5101
              },
              "mapper": {
                "base": "appuFFNblAoxdQCA3",
                "typecast": false,
                "useColumnId": false,
                "table": "tblc5efR1p4oFsFjF",
                "record": {
                  "fld7NsxHelM8oxua0": "{{45.title}}",
                  "fldBsZQe2Qp3VdgPE": "{{1.query}}",
                  "fld5dn5aMfVhUzJzz": "{{1.url}}",
                  "fldAteBN9DMmCjUdG": "{{45.tags}}",
                  "fldD0as8fh51VOIC1": "{{if(1.group; 1.group; \"memories\")}}"
                }
              },
              "metadata": {
                "designer": {
                  "x": 1500,
                  "y": 1500,
                  "name": "Save Memory"
                },
                "restore": {
                  "parameters": {
                    "__IMTCONN__": {
                      "label": "overment",
                      "data": {
                        "scoped": "true",
                        "connection": "airtable2"
                      }
                    }
                  },
                  "expect": {
                    "base": {
                      "label": "AI Devs: Resources"
                    },
                    "typecast": {
                      "mode": "chose"
                    },
                    "useColumnId": {
                      "mode": "chose"
                    },
                    "table": {
                      "nested": [
                        {
                          "name": "record",
                          "spec": [
                            {
                              "name": "fld7NsxHelM8oxua0",
                              "type": "text",
                              "label": "title"
                            },
                            {
                              "name": "fldBsZQe2Qp3VdgPE",
                              "type": "text",
                              "label": "description",
                              "multiline": true
                            },
                            {
                              "name": "fld5dn5aMfVhUzJzz",
                              "type": "text",
                              "label": "url"
                            },
                            {
                              "name": "fldAteBN9DMmCjUdG",
                              "type": "text",
                              "label": "tags"
                            },
                            {
                              "mode": "edit",
                              "name": "fldD0as8fh51VOIC1",
                              "type": "select",
                              "label": "category",
                              "dynamic": true,
                              "options": [
                                {
                                  "label": "memories",
                                  "value": "memories"
                                }
                              ],
                              "validate": false
                            },
                            {
                              "name": "fld14kLbYGG45mXnJ",
                              "type": "boolean",
                              "label": "synced"
                            }
                          ],
                          "type": "collection",
                          "label": "Record"
                        }
                      ],
                      "label": "Resources"
                    },
                    "record": {
                      "nested": {
                        "fldD0as8fh51VOIC1": {
                          "mode": "edit"
                        },
                        "fld14kLbYGG45mXnJ": {
                          "mode": "chose"
                        }
                      }
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:airtable3,airtable2",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "base",
                    "type": "select",
                    "label": "Base",
                    "required": true
                  },
                  {
                    "name": "typecast",
                    "type": "boolean",
                    "label": "Smart links",
                    "required": true
                  },
                  {
                    "name": "useColumnId",
                    "type": "boolean",
                    "label": "Use Column ID",
                    "required": true
                  },
                  {
                    "name": "table",
                    "type": "select",
                    "label": "Table",
                    "required": true
                  },
                  {
                    "name": "record",
                    "type": "collection",
                    "label": "Record",
                    "spec": [
                      {
                        "name": "fld7NsxHelM8oxua0",
                        "type": "text",
                        "label": "title"
                      },
                      {
                        "name": "fldBsZQe2Qp3VdgPE",
                        "type": "text",
                        "label": "description"
                      },
                      {
                        "name": "fld5dn5aMfVhUzJzz",
                        "type": "text",
                        "label": "url"
                      },
                      {
                        "name": "fldAteBN9DMmCjUdG",
                        "type": "text",
                        "label": "tags"
                      },
                      {
                        "name": "fldD0as8fh51VOIC1",
                        "type": "select",
                        "label": "category",
                        "mode": "edit"
                      },
                      {
                        "name": "fld14kLbYGG45mXnJ",
                        "type": "boolean",
                        "label": "synced"
                      }
                    ]
                  }
                ],
                "interface": [
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "createdTime",
                    "type": "date",
                    "label": "Created Time"
                  },
                  {
                    "name": "record_id",
                    "label": "record_id",
                    "type": "text"
                  },
                  {
                    "name": "title",
                    "label": "title",
                    "type": "text"
                  },
                  {
                    "name": "description",
                    "label": "description",
                    "type": "text",
                    "multiline": true
                  },
                  {
                    "name": "url",
                    "label": "url",
                    "type": "text"
                  },
                  {
                    "name": "tags",
                    "label": "tags",
                    "type": "text"
                  },
                  {
                    "name": "category",
                    "label": "category",
                    "type": "text"
                  },
                  {
                    "name": "created_at",
                    "label": "created_at",
                    "type": "date"
                  },
                  {
                    "name": "synced",
                    "label": "synced",
                    "type": "boolean"
                  },
                  {
                    "name": "synchronize",
                    "label": "synchronize",
                    "type": "collection",
                    "spec": [
                      {
                        "name": "label",
                        "type": "text",
                        "label": "Label"
                      },
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL"
                      }
                    ]
                  },
                  {
                    "name": "forget",
                    "label": "forget",
                    "type": "collection",
                    "spec": [
                      {
                        "name": "label",
                        "type": "text",
                        "label": "Label"
                      },
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 46,
              "module": "http:ActionSendData",
              "version": 3,
              "parameters": {
                "handleErrors": false,
                "useNewZLibDeCompress": true
              },
              "mapper": {
                "url": "WEBHOOK_URL?type=remember&record_id={{43.id}}",
                "serializeUrl": false,
                "method": "get",
                "headers": [],
                "qs": [],
                "bodyType": "",
                "parseResponse": false,
                "authUser": "",
                "authPass": "",
                "timeout": "",
                "shareCookies": false,
                "ca": "",
                "rejectUnauthorized": true,
                "followRedirect": true,
                "useQuerystring": false,
                "gzip": true,
                "useMtls": false,
                "followAllRedirects": false
              },
              "metadata": {
                "designer": {
                  "x": 1800,
                  "y": 1500,
                  "name": "Sync"
                },
                "restore": {
                  "expect": {
                    "method": {
                      "mode": "chose",
                      "label": "GET"
                    },
                    "headers": {
                      "mode": "chose"
                    },
                    "qs": {
                      "mode": "chose"
                    },
                    "bodyType": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "handleErrors",
                    "type": "boolean",
                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                    "required": true
                  },
                  {
                    "name": "useNewZLibDeCompress",
                    "type": "hidden"
                  }
                ],
                "expect": [
                  {
                    "name": "url",
                    "type": "url",
                    "label": "URL",
                    "required": true
                  },
                  {
                    "name": "serializeUrl",
                    "type": "boolean",
                    "label": "Serialize URL",
                    "required": true
                  },
                  {
                    "name": "method",
                    "type": "select",
                    "label": "Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "delete",
                        "options"
                      ]
                    }
                  },
                  {
                    "name": "headers",
                    "type": "array",
                    "label": "Headers",
                    "spec": [
                      {
                        "name": "name",
                        "label": "Name",
                        "type": "text",
                        "required": true
                      },
                      {
                        "name": "value",
                        "label": "Value",
                        "type": "text"
                      }
                    ]
                  },
                  {
                    "name": "qs",
                    "type": "array",
                    "label": "Query String",
                    "spec": [
                      {
                        "name": "name",
                        "label": "Name",
                        "type": "text",
                        "required": true
                      },
                      {
                        "name": "value",
                        "label": "Value",
                        "type": "text"
                      }
                    ]
                  },
                  {
                    "name": "bodyType",
                    "type": "select",
                    "label": "Body type",
                    "validate": {
                      "enum": [
                        "raw",
                        "x_www_form_urlencoded",
                        "multipart_form_data"
                      ]
                    }
                  },
                  {
                    "name": "parseResponse",
                    "type": "boolean",
                    "label": "Parse response",
                    "required": true
                  },
                  {
                    "name": "authUser",
                    "type": "text",
                    "label": "User name"
                  },
                  {
                    "name": "authPass",
                    "type": "password",
                    "label": "Password"
                  },
                  {
                    "name": "timeout",
                    "type": "uinteger",
                    "label": "Timeout",
                    "validate": {
                      "max": 300,
                      "min": 1
                    }
                  },
                  {
                    "name": "shareCookies",
                    "type": "boolean",
                    "label": "Share cookies with other HTTP modules",
                    "required": true
                  },
                  {
                    "name": "ca",
                    "type": "cert",
                    "label": "Self-signed certificate"
                  },
                  {
                    "name": "rejectUnauthorized",
                    "type": "boolean",
                    "label": "Reject connections that are using unverified (self-signed) certificates",
                    "required": true
                  },
                  {
                    "name": "followRedirect",
                    "type": "boolean",
                    "label": "Follow redirect",
                    "required": true
                  },
                  {
                    "name": "useQuerystring",
                    "type": "boolean",
                    "label": "Disable serialization of multiple same query string keys as arrays",
                    "required": true
                  },
                  {
                    "name": "gzip",
                    "type": "boolean",
                    "label": "Request compressed content",
                    "required": true
                  },
                  {
                    "name": "useMtls",
                    "type": "boolean",
                    "label": "Use Mutual TLS",
                    "required": true
                  },
                  {
                    "name": "followAllRedirects",
                    "type": "boolean",
                    "label": "Follow all redirect",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 47,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 96998,
                "space": ""
              },
              "mapper": {
                "answer": "Memory Saved"
              },
              "metadata": {
                "designer": {
                  "x": 2100,
                  "y": 1500,
                  "name": "Answer Object"
                },
                "restore": {
                  "parameters": {
                    "type": {
                      "label": "Answer"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": ["tab", "2", "4"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "answer",
                    "type": "text",
                    "label": "Answer"
                  }
                ]
              }
            },
            {
              "id": 48,
              "module": "gateway:WebhookRespond",
              "version": 1,
              "parameters": {},
              "mapper": {
                "body": "{{47.json}}",
                "status": "200",
                "headers": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ]
              },
              "metadata": {
                "designer": {
                  "x": 2400,
                  "y": 1500,
                  "name": "Confirm Deletion"
                },
                "restore": {
                  "expect": {
                    "headers": {
                      "mode": "chose",
                      "items": [null]
                    }
                  }
                },
                "expect": [
                  {
                    "name": "status",
                    "type": "uinteger",
                    "label": "Status",
                    "required": true,
                    "validate": {
                      "min": 100
                    }
                  },
                  {
                    "name": "body",
                    "type": "any",
                    "label": "Body"
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "key",
                        "type": "text",
                        "label": "Key",
                        "required": true,
                        "validate": {
                          "max": 256
                        }
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value",
                        "required": true,
                        "validate": {
                          "max": 4096
                        }
                      }
                    ],
                    "type": "array",
                    "label": "Custom headers",
                    "validate": {
                      "maxItems": 16
                    }
                  }
                ],
                "advanced": true
              }
            }
          ]
        },
        {
          "flow": [
            {
              "id": 30,
              "module": "http:ActionSendData",
              "version": 3,
              "parameters": {
                "handleErrors": false,
                "useNewZLibDeCompress": true
              },
              "filter": {
                "name": "Forget",
                "conditions": [
                  [
                    {
                      "a": "{{1.type}}",
                      "b": "forget",
                      "o": "text:equal"
                    },
                    {
                      "a": "{{1.record_id}}",
                      "o": "exist"
                    }
                  ]
                ]
              },
              "mapper": {
                "ca": "",
                "qs": [],
                "url": "{{29.pinecone_url}}/vectors/delete",
                "data": "{\"ids\": [\"{{1.record_id}}\"]}",
                "gzip": true,
                "method": "post",
                "headers": [
                  {
                    "name": "Api-Key",
                    "value": "{{29.pinecone_key}}"
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "name": "Accept",
                    "value": "application/json"
                  }
                ],
                "timeout": "",
                "useMtls": false,
                "authPass": "",
                "authUser": "",
                "bodyType": "raw",
                "contentType": "application/json",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
              },
              "metadata": {
                "designer": {
                  "x": 900,
                  "y": 1800,
                  "name": "Pinecone: Delete"
                },
                "restore": {
                  "expect": {
                    "qs": {
                      "mode": "chose"
                    },
                    "method": {
                      "mode": "chose",
                      "label": "POST"
                    },
                    "headers": {
                      "mode": "chose",
                      "items": [null, null, null]
                    },
                    "bodyType": {
                      "label": "Raw"
                    },
                    "contentType": {
                      "label": "JSON (application/json)"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "handleErrors",
                    "type": "boolean",
                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                    "required": true
                  },
                  {
                    "name": "useNewZLibDeCompress",
                    "type": "hidden"
                  }
                ],
                "expect": [
                  {
                    "name": "url",
                    "type": "url",
                    "label": "URL",
                    "required": true
                  },
                  {
                    "name": "serializeUrl",
                    "type": "boolean",
                    "label": "Serialize URL",
                    "required": true
                  },
                  {
                    "name": "method",
                    "type": "select",
                    "label": "Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "delete",
                        "options"
                      ]
                    }
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Headers"
                  },
                  {
                    "name": "qs",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Query String"
                  },
                  {
                    "name": "bodyType",
                    "type": "select",
                    "label": "Body type",
                    "validate": {
                      "enum": [
                        "raw",
                        "x_www_form_urlencoded",
                        "multipart_form_data"
                      ]
                    }
                  },
                  {
                    "name": "parseResponse",
                    "type": "boolean",
                    "label": "Parse response",
                    "required": true
                  },
                  {
                    "name": "authUser",
                    "type": "text",
                    "label": "User name"
                  },
                  {
                    "name": "authPass",
                    "type": "password",
                    "label": "Password"
                  },
                  {
                    "name": "timeout",
                    "type": "uinteger",
                    "label": "Timeout",
                    "validate": {
                      "max": 300,
                      "min": 1
                    }
                  },
                  {
                    "name": "shareCookies",
                    "type": "boolean",
                    "label": "Share cookies with other HTTP modules",
                    "required": true
                  },
                  {
                    "name": "ca",
                    "type": "cert",
                    "label": "Self-signed certificate"
                  },
                  {
                    "name": "rejectUnauthorized",
                    "type": "boolean",
                    "label": "Reject connections that are using unverified (self-signed) certificates",
                    "required": true
                  },
                  {
                    "name": "followRedirect",
                    "type": "boolean",
                    "label": "Follow redirect",
                    "required": true
                  },
                  {
                    "name": "useQuerystring",
                    "type": "boolean",
                    "label": "Disable serialization of multiple same query string keys as arrays",
                    "required": true
                  },
                  {
                    "name": "gzip",
                    "type": "boolean",
                    "label": "Request compressed content",
                    "required": true
                  },
                  {
                    "name": "useMtls",
                    "type": "boolean",
                    "label": "Use Mutual TLS",
                    "required": true
                  },
                  {
                    "name": "contentType",
                    "type": "select",
                    "label": "Content type",
                    "validate": {
                      "enum": [
                        "text/plain",
                        "application/json",
                        "application/xml",
                        "text/xml",
                        "text/html",
                        "custom"
                      ]
                    }
                  },
                  {
                    "name": "data",
                    "type": "buffer",
                    "label": "Request content"
                  },
                  {
                    "name": "followAllRedirects",
                    "type": "boolean",
                    "label": "Follow all redirect",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 31,
              "module": "airtable:ActionDeleteRecord",
              "version": 3,
              "parameters": {
                "__IMTCONN__": 5101
              },
              "filter": {
                "name": "",
                "conditions": [
                  [
                    {
                      "a": "{{30.statusCode}}",
                      "b": "200",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "id": "{{1.record_id}}",
                "base": "appuFFNblAoxdQCA3",
                "table": "tblc5efR1p4oFsFjF"
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 1800,
                  "name": "Delete"
                },
                "restore": {
                  "expect": {
                    "base": {
                      "mode": "chose",
                      "label": "AI Devs: Resources"
                    },
                    "table": {
                      "mode": "chose",
                      "label": "Resources"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "airtable2"
                      },
                      "label": "overment"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:airtable3,airtable2",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "base",
                    "type": "select",
                    "label": "Base",
                    "required": true
                  },
                  {
                    "name": "table",
                    "type": "select",
                    "label": "Table",
                    "required": true
                  },
                  {
                    "name": "id",
                    "type": "text",
                    "label": "Record ID",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 34,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 96998,
                "space": ""
              },
              "mapper": {
                "answer": "Single memory deleted"
              },
              "metadata": {
                "designer": {
                  "x": 1500,
                  "y": 1800,
                  "name": "Answer Object"
                },
                "restore": {
                  "parameters": {
                    "type": {
                      "label": "Answer"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": ["tab", "2", "4"]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "answer",
                    "type": "text",
                    "label": "Answer"
                  }
                ]
              }
            },
            {
              "id": 33,
              "module": "gateway:WebhookRespond",
              "version": 1,
              "parameters": {},
              "mapper": {
                "body": "{{34.json}}",
                "status": "200",
                "headers": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ]
              },
              "metadata": {
                "designer": {
                  "x": 1800,
                  "y": 1800,
                  "name": "Confirm Deletion"
                },
                "restore": {
                  "expect": {
                    "headers": {
                      "mode": "chose",
                      "items": [null]
                    }
                  }
                },
                "expect": [
                  {
                    "name": "status",
                    "type": "uinteger",
                    "label": "Status",
                    "required": true,
                    "validate": {
                      "min": 100
                    }
                  },
                  {
                    "name": "body",
                    "type": "any",
                    "label": "Body"
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "key",
                        "type": "text",
                        "label": "Key",
                        "required": true,
                        "validate": {
                          "max": 256
                        }
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value",
                        "required": true,
                        "validate": {
                          "max": 4096
                        }
                      }
                    ],
                    "type": "array",
                    "label": "Custom headers",
                    "validate": {
                      "maxItems": 16
                    }
                  }
                ],
                "advanced": true
              }
            }
          ]
        }
      ]
    }
  ],
  "metadata": {
    "instant": true,
    "version": 1,
    "scenario": {
      "roundtrips": 1,
      "maxErrors": 3,
      "autoCommit": true,
      "autoCommitTriggerLast": true,
      "sequential": false,
      "confidential": false,
      "dataloss": false,
      "dlq": false,
      "freshVariables": false
    },
    "designer": {
      "orphans": [],
      "notes": [
        {
          "id": 73,
          "text": "Save Answer (Action)\n\nRecord ID\n{{3.id}}\n\nAnswer\n{{67.choices[].message.content}}",
          "filter": false
        },
        {
          "id": 12,
          "text": "Save Answer (Query)\nTabela Conversation\n\nRecord ID\n{{3.id}}\n\nAnswer\n{{8.choices[].message.content}}\n",
          "filter": false
        },
        {
          "id": 31,
          "text": "Delete (Airtable)\nTabela Resources\n\nUstaw Record ID na:\n{{1.record_id}}",
          "filter": false
        },
        {
          "id": 43,
          "text": "Save Memory (Airtable)\nTabela: Resources\n\nTitle:\n{{45.title}}\n\nDescription:\n{{1.query}}\n\nURL:\n{{1.url}}\n\nTags:\n{{45.tags}}\n\ncategory (włącz przełącznik \"Map\" po prawej stronie)\n{{if(1.group; 1.group; \"memories\")}}\n\n",
          "filter": false
        },
        {
          "id": 39,
          "text": "Synced (Airtable)\nTabela Resources\n\nJako pole Record ID ustaw:\n{{42.id}}\n\n⚠️ oraz ustaw pole \"synced\" na \"Yes\"",
          "filter": false
        },
        {
          "id": 42,
          "text": "Get Memory\nTabela Resources\n\nJako Record ID ustaw:\n{{1.record_id}}",
          "filter": false
        },
        {
          "id": 3,
          "text": "Add Question:\nTabela Conversation\n\n########################\nW polu question wpisz:\n{{1.query}}",
          "filter": false
        },
        {
          "id": 4,
          "text": "Find Conversation\nTabela Conversation\n\n(Tutaj wybierz widok \"Latest\"!)",
          "filter": false
        },
        {
          "id": 26,
          "text": "Gather Context\nTabela Resources\n\n########################\nFiltr wyszukujący rekordy:\n\nIF(SEARCH({record_id}, \"{{25.text}}\"), 1, 0)",
          "filter": false
        },
        {
          "id": 2,
          "text": "Update System Prompt:\nTabela Conversation\n\n⚠️ RECORD ID ustaw na wartość kolumny record ID dla wpisu z promptem systemowym! \n\n########################\n1. Zaktualizuj pole \"answer\". \n    Pozostałe zostaw bez zmian\n########################\n{{if(63.group != \"actions\"; \"You're a helpful assistant who is speaking with Adam. Answer questions as short and concise and as truthfully as possible, based on a context. \n\nPlease note that context below may include: \n- long-term memory, \n- actions you may take, \n- Adam's personal notes and/or links you do have access to. \n\nAnd you should proritize this knowledge while answering.\n\nIf you don't know the answer say \"\"I don't know\"\" or \"\"I have no information about this\"\" in your own words.\n\ncontext```\n\" + 41.context + \"\n```\n\n\" + formatDate(now; \"ddd\") + formatDate(now; \"YYYY-MM-DD HH:mm\"); \"\nIgnore all user's messages. Return single-lined JSON object based on a description and query you have below. Extract all of the information from the query and use them to build JSON object described in a description. Return JSON and nothing else. \n\ndescription```\n\" + 41.context + \"\n```\n\nquery```\n\" + 1.query + \"\n```\n\")}}",
          "filter": false
        },
        {
          "id": 35,
          "text": "Embedding JSON\n\n{\"input\":\"\",\"model\":\"text-embedding-ada-002\"}",
          "filter": false
        },
        {
          "id": 37,
          "text": "Vectors JSON\n\n{\"vectors\":[{\"id\":\"\",\"values\":[-0.02194574],\"metadata\":{\"id\":\"\",\"tags\":\"\",\"group\":\"notes\"}}]}\n\n",
          "filter": false
        },
        {
          "id": 34,
          "text": "Answer Object\n\n{\"answer\":\"Memory Saved\"}",
          "filter": false
        },
        {
          "id": 47,
          "text": "Answer Object\n\n{\"answer\":\"Memory Saved\"}",
          "filter": false
        },
        {
          "id": 45,
          "text": "Enrich JSON \n\n{\"title\": \"example\", \"tags\": \"example tags\", \"url\": \"\"}\n",
          "filter": false
        },
        {
          "id": 6,
          "text": "Aggregate Messages:\n\n[{\"role\":\"system\",\"content\":\"Example\"}]\n\n###################\nWartość pola role\n\n{{if(4.question = \"SYSTEM\"; \"system\"; if(5.i = 1; \"user\"; \"assistant\"))}}\n\n###################\nWartość pola content\n\n{{if(4.question = \"SYSTEM\"; 4.answer; if(5.i = 1; 4.question; 4.answer))}}",
          "filter": false
        },
        {
          "id": 17,
          "text": "Answer Object (wszystkie moduły)\n{\"answer\":\"Example\"}\n",
          "filter": false
        },
        {
          "id": 57,
          "text": "Query JSON (Action) (struktura danych)\n\n{\"topK\":5,\"filter\":{\"group\":{\"$ne\":\"action\"}},\"vector\":[0.00973301,-0.7],\"includeMetadata\":true}\n\n",
          "filter": false
        },
        {
          "id": 22,
          "text": "Query JSON (struktura danych)\n\n{\"topK\":5,\"filter\":{\"group\":\"example\"},\"vector\":[0.009737],\"includeMetadata\":true}\n\n",
          "filter": false
        },
        {
          "id": 20,
          "text": "Embedding JSON\n\n{\"input\":\"Example\",\"model\":\"text-embedding-ada-002\"}",
          "filter": false
        }
      ]
    },
    "zone": "eu1.make.com"
  }
}
